{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/modules/auth/jwt-auth.guard.ts","webpack:///external commonjs \"@nestjs/passport\"","webpack:///./src/app/sync.service.ts","webpack:///external commonjs \"typeorm\"","webpack:///./src/app/modules/customer/customer.entity.ts","webpack:///./src/app/config/database/base-entity.ts","webpack:///./src/app/modules/survey/survey.entity.ts","webpack:///./src/app/modules/report/report.entity.ts","webpack:///./src/app/modules/sector/sector.entity.ts","webpack:///./src/app/modules/item/item.entity.ts","webpack:///./src/app/modules/photo/photo.entity.ts","webpack:///./src/environments/environment.prod.ts","webpack:///external commonjs \"node-xlsx\"","webpack:///./src/app/modules/events/events.gateway.ts","webpack:///external commonjs \"@nestjs/websockets\"","webpack:///external commonjs \"rxjs\"","webpack:///external commonjs \"rxjs/operators\"","webpack:///external commonjs \"socket.io\"","webpack:///./src/app/config/database/database.module.ts","webpack:///./src/app/config/database/database.providers.ts","webpack:///./src/app/config/database/database.constants.ts","webpack:///./src/app/modules/user/user.entity.ts","webpack:///./src/app/modules/log/log.entity.ts","webpack:///./src/app/modules/survey/survey.subscriber.ts","webpack:///./src/app/modules/item/item.subscriber.ts","webpack:///./src/app/modules/auth/auth.module.ts","webpack:///./src/app/modules/auth/auth.service.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/app/modules/user/user.service.ts","webpack:///external commonjs \"@dataui/crud-typeorm\"","webpack:///./src/app/modules/auth/local.strategy.ts","webpack:///external commonjs \"passport-local\"","webpack:///./src/app/modules/auth/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///./src/app/modules/auth/constants.ts","webpack:///./src/app/modules/user/user.module.ts","webpack:///./src/app/modules/user/user.controller.ts","webpack:///external commonjs \"@dataui/crud\"","webpack:///./src/app/modules/user/user.providers.ts","webpack:///./src/app/modules/user/constants.ts","webpack:///./src/app/modules/auth/auth.controller.ts","webpack:///./src/app/modules/customer/customer.module.ts","webpack:///./src/app/modules/customer/customer.controller.ts","webpack:///./src/app/modules/customer/customer.service.ts","webpack:///./src/app/modules/customer/customer.providers.ts","webpack:///./src/app/modules/customer/constants.ts","webpack:///./src/app/modules/item/item.module.ts","webpack:///./src/app/modules/item/item.controller.ts","webpack:///./src/app/modules/item/item.service.ts","webpack:///./src/app/modules/item/item.providers.ts","webpack:///./src/app/modules/item/constants.ts","webpack:///./src/app/modules/log/log.module.ts","webpack:///./src/app/modules/log/log.controller.ts","webpack:///./src/app/modules/log/log.service.ts","webpack:///./src/app/modules/log/log.providers.ts","webpack:///./src/app/modules/log/constants.ts","webpack:///./src/app/modules/survey/survey.module.ts","webpack:///./src/app/modules/survey/survey.controller.ts","webpack:///./src/app/modules/survey/survey.service.ts","webpack:///./src/app/modules/survey/survey.providers.ts","webpack:///./src/app/modules/survey/survey.constants.ts","webpack:///./src/app/modules/sector/sector.module.ts","webpack:///./src/app/modules/sector/sector.controller.ts","webpack:///./src/app/modules/sector/sector.service.ts","webpack:///./src/app/modules/sector/sector.providers.ts","webpack:///./src/app/modules/sector/sector.constants.ts","webpack:///./src/app/modules/photo/photo.module.ts","webpack:///./src/app/modules/photo/photo.controller.ts","webpack:///external commonjs \"@nestjs/platform-express\"","webpack:///./src/app/modules/photo/photo.service.ts","webpack:///external commonjs \"express\"","webpack:///external commonjs \"multer\"","webpack:///./src/app/modules/photo/photo.utils.ts","webpack:///external node-commonjs \"path\"","webpack:///external commonjs \"uuid\"","webpack:///./src/app/modules/photo/photo.providers.ts","webpack:///./src/app/modules/photo/constants.ts","webpack:///./src/app/modules/events/events.module.ts","webpack:///./src/app/modules/report/report.module.ts","webpack:///./src/app/modules/report/report.controller.ts","webpack:///./src/app/modules/report/report.service.ts","webpack:///external commonjs \"pdfkit-table\"","webpack:///external commonjs \"date-fns\"","webpack:///../../libs/config/src/index.ts","webpack:///../../libs/config/src/lib/config.ts","webpack:///../../libs/config/src/lib/table-data.ts","webpack:///../../libs/config/src/lib/app.config.ts","webpack:///../../libs/config/src/lib/entity/customer.entity.ts","webpack:///../../libs/config/src/lib/app.defaults.ts","webpack:///../../libs/config/src/lib/entity/item.entity.ts","webpack:///../../libs/config/src/lib/entity/photo.entity.ts","webpack:///../../libs/config/src/lib/entity/report.entity.ts","webpack:///external commonjs \"date-fns/locale\"","webpack:///../../libs/config/src/lib/entity/sector.entity.ts","webpack:///../../libs/config/src/lib/entity/survey.entity.ts","webpack:///../../libs/config/src/lib/entity/user.entity.ts","webpack:///../../libs/config/src/lib/entity/log.entity.ts","webpack:///./src/app/config/path.ts","webpack:///external commonjs \"chartist-svg\"","webpack:///external node-commonjs \"fs\"","webpack:///external commonjs \"ghostscript4js\"","webpack:///external commonjs \"google-charts-node\"","webpack:///./src/app/modules/report/report.providers.ts","webpack:///./src/app/modules/report/constants.ts","webpack:///external commonjs \"body-parser\"","webpack:///external commonjs \"helmet\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { SyncService } from './sync.service';\n\n// Config\nimport { DatabaseModule } from './config/database/database.module';\n\n// Modules\nimport { AuthModule } from './modules/auth/auth.module';\nimport { UserModule } from './modules/user/user.module';\nimport { CustomerModule } from './modules/customer/customer.module';\nimport { ItemModule } from './modules/item/item.module';\nimport { LogModule } from './modules/log/log.module';\nimport { SurveyModule } from './modules/survey/survey.module';\nimport { SectorModule } from './modules/sector/sector.module';\nimport { PhotoModule } from './modules/photo/photo.module';\nimport { EventsModule } from './modules/events/events.module';\nimport { ReportModule } from './modules/report/report.module';\n// import { CouchDbModule } from '@seyconel/nest-couchdb';\n// import { CatsModule } from './modules/cats/cats.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    AuthModule,\n    UserModule,\n    CustomerModule,\n    SurveyModule,\n    SectorModule,\n    ItemModule,\n    LogModule,\n    PhotoModule,\n    EventsModule,\n    ReportModule,\n  ],\n  controllers: [AppController],\n  providers: [SyncService],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","import {\n  Controller,\n  Post,\n  UseGuards,\n  Get,\n  Response,\n  Body,\n  Param,\n} from '@nestjs/common';\nimport { JwtAuthGuard } from './modules/auth/jwt-auth.guard';\nimport { SyncService } from './sync.service';\nimport xlsx from 'node-xlsx';\nimport { EventsGateway } from './modules/events/events.gateway';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private syncService: SyncService,\n    private eventsGateway: EventsGateway\n  ) {}\n\n  // @UseGuards(JwtAuthGuard)\n  @Get()\n  index() {\n    return {api: true}\n  }\n\n  @Get('sync')\n  getSync() {\n    return this.syncService.getSync();\n  }\n\n  @Get('ws')\n  ws() {\n    return this.eventsGateway.server.emit('events', { message: 'working' });\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('sync/:entityId')\n  postSync(@Param('entityId') entityId: string, @Body('data') data: any) {\n    return this.syncService.postSync(entityId, data);\n  }\n\n  @Get('/xls')\n  async xls(@Response() res): Promise<void> {\n    const data = [\n      [1, 2, 3],\n      [true, false, null, 'sheetjs'],\n      ['foo', 'bar', new Date('2014-02-19T14:30Z'), '0.3'],\n      ['baz', null, 'qux'],\n    ];\n    const buffer = xlsx.build([{ name: 'Seyconel', data: data, options: {} }]); // Returns a buffer\n    const filename = 'testingHere';\n    res.set({\n      'Content-Type':\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      'Content-disposition': `attachment; filename=${filename}.xlsx`,\n    });\n    res.end(buffer);\n  }\n}\n","import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n}\n","module.exports = require(\"@nestjs/passport\");","import { Inject, Injectable } from '@nestjs/common';\nimport { Connection } from 'typeorm';\nimport { CustomerEntity } from './modules/customer/customer.entity';\nimport { ItemEntity } from './modules/item/item.entity';\nimport { SectorEntity } from './modules/sector/sector.entity';\nimport { SurveyEntity } from './modules/survey/survey.entity';\nimport { IaBaseInterface } from '@seyconel/config';\n\n@Injectable()\nexport class SyncService {\n  entities = {\n    customers: CustomerEntity,\n    surveys: SurveyEntity,\n    sectors: SectorEntity,\n    items: ItemEntity,\n  };\n  constructor(@Inject('DATABASE_CONNECTION') private connection: Connection) {}\n  async getSync(): Promise<{\n    surveys: SurveyEntity[];\n    customers: CustomerEntity[];\n  }> {\n    const repository = this.connection.getRepository<SurveyEntity>(\n      SurveyEntity\n    );\n\n    try {\n      const results = await repository.find({\n        where: { completed: false },\n        relations: ['customer'],\n      });\n      return results.reduce(\n        (acc, each) => {\n          const { customer, ...survey } = each;\n          acc.surveys.push(survey);\n          if (acc.customers.findIndex((c) => c.id === customer.id) < 0) {\n            acc.customers.push(customer);\n          }\n          return acc;\n        },\n        { customers: [], surveys: [] }\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async postSync(\n    entityId: string,\n    dataArr: any[]\n  ): Promise<IaBaseInterface & { localId?: string }[]> {\n    const repository = this.connection.getRepository<IaBaseInterface>(\n      this.entities[entityId]\n    );\n\n    const results = [];\n    for (const data of dataArr) {\n      try {\n        const result = await repository.save(data);\n        const saved: any = await repository.findOne({where: {id:result.id}});\n        console.log('sync', result);\n        console.log('sync saved', saved);\n        console.log('modifiedAt', saved.modifiedAt);\n        results.push({\n          sync: true,\n          syncedAt: saved.modifiedAt\n            ? this.getFormattedDate(new Date(saved.modifiedAt))\n            : null,\n          id: result.id,\n        });\n      } catch (err) {\n        console.error(err);\n        results.push({ sync: false, id: data.id });\n      }\n    }\n    return results;\n  }\n\n  getFormattedDate(d: Date) {\n    return (\n      d.getFullYear() +\n      '-' +\n      ('0' + (d.getMonth() + 1)).slice(-2) +\n      '-' +\n      ('0' + d.getDate()).slice(-2) +\n      ' ' +\n      ('0' + d.getHours()).slice(-2) +\n      ':' +\n      ('0' + d.getMinutes()).slice(-2) +\n      ':' +\n      ('0' + d.getSeconds()).slice(-2)\n    );\n  }\n}\n","module.exports = require(\"typeorm\");","import { Entity, Column, PrimaryGeneratedColumn, OneToMany, JoinColumn } from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { SurveyEntity } from '../survey/survey.entity';\n\n@Entity('customers')\nexport class CustomerEntity extends IaBaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255 })\n  cnpj: string;\n\n  @Column({ default: 0 })\n  surveysCount: number;\n\n  @OneToMany(() => SurveyEntity, (survey) => survey.customer)\n  @JoinColumn()\n  surveys?: SurveyEntity[];\n}\n","import {\n  Entity,\n  PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nexport class IaBaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt?: Date;\n\n  @UpdateDateColumn({ type: 'timestamp' })\n  modifiedAt?: Date;\n}\n","import {\n  Entity,\n  Column,\n  ManyToOne,\n  OneToMany,\n  AfterInsert,\n  Index,\n} from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { CustomerEntity } from '../customer/customer.entity';\nimport { ItemEntity } from '../item/item.entity';\nimport { ReportEntity } from '../report/report.entity';\nimport { SectorEntity } from '../sector/sector.entity';\n\n@Entity('surveys')\nexport class SurveyEntity extends IaBaseEntity {\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ nullable: true })\n  month: number;\n\n  @Column({ nullable: true })\n  year: number;\n\n  @Column({ length: 255, nullable: true })\n  city: string;\n\n  @Column({ length: 255, nullable: true })\n  state: string;\n\n  @ManyToOne(() => CustomerEntity, (customer) => customer.surveys)\n  customer?: CustomerEntity;\n\n  @Index()\n  @Column({ nullable: true })\n  customerId: string;\n\n  @Column({ default: 0 })\n  sectorsCount: number;\n\n  @OneToMany(() => SectorEntity, (sector) => sector.survey)\n  sectors?: SectorEntity[];\n\n  @OneToMany(() => ReportEntity, (report) => report.survey)\n  reports?: ReportEntity[];\n\n  @Column({ type: 'timestamp', nullable: true })\n  savedAt?: Date;\n\n  @Column({ default: false })\n  completed: boolean;\n}\n","import {\n  Entity,\n  Column,\n  ManyToOne,\n  OneToMany,\n  AfterInsert,\n  Index,\n} from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { CustomerEntity } from '../customer/customer.entity';\nimport { ItemEntity } from '../item/item.entity';\nimport { SectorEntity } from '../sector/sector.entity';\nimport { SurveyEntity } from '../survey/survey.entity';\n\n@Entity('reports')\nexport class ReportEntity extends IaBaseEntity {\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ type: 'int', default: 0 })\n  ri: number;\n\n  @ManyToOne(() => SurveyEntity, (customer) => customer.reports)\n  survey?: SurveyEntity;\n\n  @Index()\n  @Column({ nullable: true })\n  surveyId: string;\n\n  @Column({ type: 'json', nullable: true, default: null })\n  data: any;\n}\n","import { Entity, Column, ManyToOne, OneToMany, AfterInsert, Index } from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { CustomerEntity } from '../customer/customer.entity';\nimport { ItemEntity } from '../item/item.entity';\nimport { SurveyEntity } from '../survey/survey.entity';\n\n@Entity('sectors')\nexport class SectorEntity extends IaBaseEntity {\n  @Column({ length: 255 })\n  name: string;\n\n  @ManyToOne(() => SurveyEntity, (survey) => survey.sectors)\n  survey: SurveyEntity;\n\n  @Column({ nullable: true })\n  surveyId: string;\n\n  @Column({ default: 0 })\n  itemsCount: number;\n\n  @OneToMany(() => ItemEntity, (item) => item.sector)\n  items?: ItemEntity[];\n\n  @Column({ type: 'timestamp', nullable: true })\n  savedAt?: Date;\n}\n","import { Entity, Column, ManyToOne, OneToMany } from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { PhotoEntity } from '../photo/photo.entity';\nimport { SectorEntity } from '../sector/sector.entity';\n\n@Entity('items')\nexport class ItemEntity extends IaBaseEntity {\n  @Column({ length: 255 })\n  traceability: string;\n\n  @OneToMany(() => PhotoEntity, (photo) => photo.item)\n  photos: PhotoEntity;\n\n  photosCount?: number;\n\n  @ManyToOne(() => SectorEntity, (sector) => sector.items)\n  sector: SectorEntity;\n\n  @Column({ nullable: true })\n  sectorId: string;\n\n  @Column({ type: 'json', nullable: true, default: null })\n  data: any;\n\n  @Column({ nullable: false, default: false })\n  approved: boolean;\n}\n","import { environment } from '../../../environments/environment';\nimport { Entity, Column, ManyToOne, AfterLoad } from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { ItemEntity } from '../item/item.entity';\n\n@Entity('photos')\nexport class PhotoEntity extends IaBaseEntity {\n  @ManyToOne(() => ItemEntity, (item) => item.photos)\n  item: ItemEntity;\n\n  @Column({ nullable: true })\n  itemId: string;\n\n  @Column({ length: 255 }) file: string;\n\n  protected photoUrl: string;\n\n  @Column({ type: 'simple-json', nullable: true }) data?: string;\n\n  @Column({ type: 'timestamp', nullable: true })\n  savedAt?: Date;\n\n  @AfterLoad()\n  getPhotoUrl() {\n    this.photoUrl = this.file ? `${environment.cdnUrl}/${this.file}` : null;\n  }\n}\n","export const environment = {\n  production: true,\n  db: {\n    host: 'localhost',\n    port: 3306,\n    username: 'inspecao',\n    password: 'IZc3?nG994@=',\n    database: 'inspecao',\n  },\n  cdnUrl: `https://apiinspecao.seyconel.com.br/files`,\n\n};\n","module.exports = require(\"node-xlsx\");","import {\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse,\n} from '@nestjs/websockets';\nimport { from, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Server } from 'socket.io';\n\n@WebSocketGateway(3334, { cors: true })\nexport class EventsGateway {\n  @WebSocketServer()\n  server: Server;\n\n  @SubscribeMessage('events')\n  findAll(@MessageBody() data: any): Observable<WsResponse<number>> {\n    return from([1, 2, 3]).pipe(\n      map((item) => ({ event: 'events', data: item }))\n    );\n  }\n}\n","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"socket.io\");","import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n","import { createConnection } from 'typeorm';\nimport { DATABASE_CONNECTION } from './database.constants';\n\nimport { CustomerEntity } from '../../modules/customer/customer.entity';\nimport { UserEntity } from '../../modules/user/user.entity';\nimport { ItemEntity } from '../../modules/item/item.entity';\nimport { LogEntity } from '../../modules/log/log.entity';\nimport { SurveyEntity } from '../../modules/survey/survey.entity';\nimport { SurveySubscriber } from '../../modules/survey/survey.subscriber';\nimport { ItemSubscriber } from '../../modules/item/item.subscriber';\nimport { SectorEntity } from '../../modules/sector/sector.entity';\nimport { environment } from '../../../environments/environment';\nimport { PhotoEntity } from '../../modules/photo/photo.entity';\nimport { ReportEntity } from '../../modules/report/report.entity';\nexport const databaseProviders = [\n  {\n    provide: DATABASE_CONNECTION,\n    useFactory: async () =>\n      await createConnection({\n        type: 'mysql',\n        ...environment.db,\n        entities: [\n          UserEntity,\n          CustomerEntity,\n          SurveyEntity,\n          SectorEntity,\n          ItemEntity,\n          PhotoEntity,\n          LogEntity,\n          ReportEntity,\n        ],\n        subscribers: [SurveySubscriber, ItemSubscriber],\n        synchronize: true,\n      }),\n  },\n];\n","export const DATABASE_CONNECTION = 'DATABASE_CONNECTION';\n","import { Entity, Column, OneToMany } from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { LogEntity } from '../log/log.entity';\n\n@Entity('users')\nexport class UserEntity extends IaBaseEntity {\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ length: 255 })\n  email: string;\n\n  @Column({ length: 255 })\n  password: string;\n\n  @OneToMany(() => LogEntity, (log) => log.user)\n  logs?: LogEntity[];\n}\n","import { Entity, Column, ManyToOne } from 'typeorm';\nimport { IaBaseEntity } from '../../config/database/base-entity';\nimport { UserEntity } from '../user/user.entity';\n\n@Entity('logs')\nexport class LogEntity extends IaBaseEntity {\n  @Column({ length: 255 })\n  name: string;\n\n  @Column({ type: 'text' })\n  description: string;\n\n  @ManyToOne(() => UserEntity, (user) => user.logs)\n  user: UserEntity;\n}\n","import {\n  Connection,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  InsertEvent,\n  RemoveEvent,\n  UpdateEvent,\n} from 'typeorm';\nimport { SelectQueryBuilderOption } from 'typeorm/query-builder/SelectQueryBuilderOption';\nimport { CustomerEntity } from '../customer/customer.entity';\nimport { SurveyEntity } from './survey.entity';\n\n@EventSubscriber()\nexport class SurveySubscriber\n  implements EntitySubscriberInterface<SurveyEntity> {\n  /**\n   * Indicates that this subscriber only listen to Post events.\n   */\n  listenTo() {\n    return SurveyEntity;\n  }\n\n  /**\n   * Called before post insertion.\n   */\n  async afterInsert(event: InsertEvent<SurveyEntity>) {\n    console.log('afterInsert', event.entity);\n    await this.updateSurveyCount(event);\n  }\n\n  async afterUpdate(event: UpdateEvent<SurveyEntity>) {\n    console.log('afterUpdate', event.updatedColumns);\n    console.log('afterUpdate', event.entity);\n    await this.updateSurveyCount(event);\n  }\n\n  async afterRemove(event: RemoveEvent<SurveyEntity>) {\n    console.log('afterRemove', event.entity);\n    await this.updateSurveyCount(event);\n  }\n\n  async updateSurveyCount(\n    event:\n      | InsertEvent<SurveyEntity>\n      | UpdateEvent<SurveyEntity>\n      | RemoveEvent<SurveyEntity>\n  ) {\n    if (event.entity && event.entity.customerId) {\n      const { customerId } = event.entity;\n      const conn = event.manager;\n      const countQuery = conn\n        .createQueryBuilder(SurveyEntity, 'survey')\n        .where({ customerId });\n      const surveysCount = await countQuery.getCount();\n      const queryUpdate = conn\n        .createQueryBuilder()\n        .update(CustomerEntity, { surveysCount })\n        .where('id = :id', { id: customerId });\n      const res = await queryUpdate.execute();\n    }\n  }\n}\n","import {\n  Connection,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  InsertEvent,\n  RemoveEvent,\n  UpdateEvent,\n} from 'typeorm';\nimport { SectorEntity } from '../sector/sector.entity';\nimport { SurveyEntity } from '../survey/survey.entity';\nimport { ItemEntity } from './item.entity';\n\n@EventSubscriber()\nexport class ItemSubscriber implements EntitySubscriberInterface<ItemEntity> {\n  /**\n   * Indicates that this subscriber only listen to Post events.\n   */\n  listenTo() {\n    return ItemEntity;\n  }\n\n  /**\n   * Called before post insertion.\n   */\n  async afterInsert(event: InsertEvent<ItemEntity>) {\n    console.log('afterInsert', EventSubscriber);\n    await this.updateItemCount(event);\n  }\n\n  async afterUpdate(event: UpdateEvent<ItemEntity>) {\n    console.log('afterUpdate', event);\n    await this.updateItemCount(event);\n  }\n\n  async afterRemove(event: RemoveEvent<ItemEntity>) {\n    console.log('afterRemove', event);\n    await this.updateItemCount(event);\n  }\n\n  async updateItemCount(\n    event:\n      | InsertEvent<ItemEntity>\n      | UpdateEvent<ItemEntity>\n      | RemoveEvent<ItemEntity>\n  ) {\n    if (event.entity && event.entity.sectorId) {\n      const { sectorId } = event.entity;\n      const conn = event.manager;\n      const countQuery = conn\n        .createQueryBuilder(ItemEntity, 'item')\n        .where({ sectorId });\n      const itemsCount = await countQuery.getCount();\n\n      const queryUpdate = conn\n        .createQueryBuilder()\n        .update(SectorEntity, { itemsCount })\n        .where('id = :id', { id: sectorId });\n      const res = await queryUpdate.execute();\n    }\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UserModule } from '../../modules/user/user.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '3000d' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserService } from '../../modules/user/user.service';\nimport { UserEntity } from '../../modules/user/user.entity';\nimport { throwError } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService\n  ) {}\n\n  async checkLogin(\n    email: string,\n    pass: string\n  ): Promise<null | { token: string }> {\n    const user = await this.userService.findByEmail(email);\n    console.log({ user });\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return this.generateToken(result);\n    }\n    throw new Error('Wrong credentials');\n  }\n\n  async generateToken(user: Partial<UserEntity>) {\n    const payload = { email: user.email, sub: user.id };\n    return {\n      token: this.jwtService.sign(payload),\n      id: user.id,\n      email: user.email,\n      name: user.name,\n    };\n  }\n}\n","module.exports = require(\"@nestjs/jwt\");","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { UserEntity } from './user.entity';\n\n// This should be a real class/interface representing a user entity\n\n@Injectable()\nexport class UserService extends TypeOrmCrudService<UserEntity> {\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private userRepository: Repository<UserEntity>\n  ) {\n    super(userRepository);\n  }\n\n  async findAll(): Promise<UserEntity[]> {\n    return this.userRepository.find();\n  }\n\n  async findByEmail(email: string): Promise<UserEntity | undefined> {\n    return this.userRepository.findOne({\n      where: { email },\n      select: ['id', 'name', 'email', 'password'],\n    });\n  }\n}\n","module.exports = require(\"@dataui/crud-typeorm\");","import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise<unknown> {\n    const user = await this.authService.checkLogin(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n","module.exports = require(\"passport-local\");","import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: { sub: string; email: string }) {\n    console.log('validate')\n    return { id: payload.sub, email: payload.email };\n  }\n}\n","module.exports = require(\"passport-jwt\");","export const jwtConstants = {\n  secret: 'secretKey',\n};\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { UserController } from './user.controller';\nimport { userProviders } from './user.providers';\nimport { UserService } from './user.service';\nimport { AuthModule } from '../auth/auth.module';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...userProviders, UserService],\n  exports: [UserService],\n  controllers: [UserController],\n})\nexport class UserModule {}\n","import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { Crud, CrudController } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\nimport { UserEntity } from './user.entity';\nimport { UserService } from './user.service';\n\n@Crud({\n  model: {\n    type: UserEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('users')\nexport class UserController implements CrudController<UserEntity> {\n  constructor(public service: UserService) {}\n\n\n}\n","module.exports = require(\"@dataui/crud\");","import { Connection } from 'typeorm';\nimport { UserEntity } from './user.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { USER_REPOSITORY } from './constants';\nexport const userProviders = [\n  {\n    provide: USER_REPOSITORY,\n    useFactory: (connection: Connection) => connection.getRepository(UserEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const USER_REPOSITORY = 'USER_REPOSITORY';\n","import { Body, Controller, HttpException, Post } from '@nestjs/common';\nimport { AuthService } from '../auth/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private auth: AuthService) {}\n\n  @Post('authenticate')\n  async authenticate(@Body() data: { email: string; password: string }) {\n    console.log({ data });\n    const { email, password } = data;\n    try {\n      const res = await this.auth.checkLogin(email, password);\n      return res;\n    } catch (err) {\n      console.error(err);\n      throw new HttpException('Unauthorized', 401);\n    }\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { CustomerController } from './customer.controller';\nimport { customerProviders } from './customer.providers';\nimport { CustomerService } from './customer.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...customerProviders, CustomerService],\n  exports: [CustomerService],\n  controllers: [CustomerController],\n})\nexport class CustomerModule {}\n","import { Controller, UseGuards } from '@nestjs/common';\nimport { Crud, CrudController } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\nimport { CustomerEntity } from './customer.entity';\nimport { CustomerService } from './customer.service';\n\n@Crud({\n  model: {\n    type: CustomerEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('customers')\nexport class CustomerController implements CrudController<CustomerEntity> {\n  constructor(public service: CustomerService) {}\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { CustomerEntity } from './customer.entity';\n\n// This should be a real class/interface representing a customer entity\n\n@Injectable()\nexport class CustomerService extends TypeOrmCrudService<CustomerEntity> {\n  constructor(\n    @Inject('CUSTOMER_REPOSITORY')\n    private customerRepository: Repository<CustomerEntity>\n  ) {\n    super(customerRepository);\n  }\n\n  async findAll(): Promise<CustomerEntity[]> {\n    return this.customerRepository.find();\n  }\n\n  /*async findOne(email: string): Promise<CustomerEntity | undefined> {\n    return this.customers.find((customer) => customer.email === email);\n  }*/\n}\n","import { Connection } from 'typeorm';\nimport { CustomerEntity } from './customer.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { CUSTOMER_REPOSITORY } from './constants';\nexport const customerProviders = [\n  {\n    provide: CUSTOMER_REPOSITORY,\n    useFactory: (connection: Connection) => connection.getRepository(CustomerEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const CUSTOMER_REPOSITORY = 'CUSTOMER_REPOSITORY';\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { ItemController } from './item.controller';\nimport { itemProviders } from './item.providers';\nimport { ItemService } from './item.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...itemProviders, ItemService],\n  exports: [ItemService],\n  controllers: [ItemController],\n})\nexport class ItemModule {}\n","import { Controller, UseGuards } from '@nestjs/common';\nimport {\n  Crud,\n  CrudController,\n  CrudRequest,\n  Override,\n  ParsedBody,\n  ParsedRequest,\n} from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\nimport { ItemEntity } from './item.entity';\nimport { ItemService } from './item.service';\n\n@Crud({\n  model: {\n    type: ItemEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    join: {\n      sector: {\n        eager: true,\n        allow: ['name'],\n        alias: 'sector',\n      },\n      ['sector.survey']: {\n        eager: true,\n        allow: ['name'],\n        alias: 'sectorSurvey',\n      },\n      ['sector.survey.customer']: {\n        eager: true,\n        allow: ['name'],\n        alias: 'sectorSurveyCustomer',\n      },\n      /*['sector.survey.customer']: {\n        eager: true,\n        allow: ['name'],\n      },*/\n    },\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('items')\nexport class ItemController implements CrudController<ItemEntity> {\n  constructor(public service: ItemService) {}\n\n  get base(): CrudController<ItemEntity> {\n    return this;\n  }\n\n  @Override()\n  getMany(@ParsedRequest() req: CrudRequest) {\n    return this.service.getManyAndCount(req);\n  }\n\n  @Override()\n  getOne(@ParsedRequest() req: CrudRequest) {\n    return this.service.getOneAndCount(req);\n  }\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { ItemEntity } from './item.entity';\nimport { CrudRequest, GetManyDefaultResponse } from '@dataui/crud';\n\n// This should be a real class/interface representing a item entity\n\n@Injectable()\nexport class ItemService extends TypeOrmCrudService<ItemEntity> {\n  constructor(\n    @Inject('ITEM_REPOSITORY')\n    private itemRepository: Repository<ItemEntity>\n  ) {\n    super(itemRepository);\n  }\n\n  async getManyAndCount(\n    req: CrudRequest\n  ): Promise<ItemEntity[] | GetManyDefaultResponse<ItemEntity>> {\n    const { parsed, options } = req;\n    const builder = await this.createBuilder(parsed, options);\n    builder.loadRelationCountAndMap(\n      'ItemEntity.photosCount',\n      'ItemEntity.photos',\n      'photosCount'\n    );\n    return this.doGetMany(builder, parsed, options);\n  }\n  public async getOneAndCount(req: CrudRequest): Promise<ItemEntity> {\n    return this.getOneAndCountOrFail(req);\n  }\n\n  protected async getOneAndCountOrFail(\n    req: CrudRequest,\n    shallow = false,\n    withDeleted = false\n  ): Promise<ItemEntity> {\n    const { parsed, options, } = req;\n    const builder = shallow\n      ? this.repo.createQueryBuilder(this.alias)\n      : await this.createBuilder(parsed, options, true, withDeleted);\n\n    if (shallow) {\n      this.setSearchCondition(builder, parsed.search, {});\n    }\n\n    builder.loadRelationCountAndMap(\n      'ItemEntity.photosCount',\n      'ItemEntity.photos',\n      'photosCount'\n    );\n\n    const found = withDeleted\n      ? await builder.withDeleted().getOne()\n      : await builder.getOne();\n\n    if (!found) {\n      this.throwNotFoundException(this.alias);\n    }\n\n    return found;\n  }\n\n  /*async findOne(email: string): Promise<ItemEntity | undefined> {\n    return this.items.find((item) => item.email === email);\n  }*/\n}\n","import { Connection } from 'typeorm';\nimport { ItemEntity } from './item.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { ITEM_REPOSITORY } from './constants';\nexport const itemProviders = [\n  {\n    provide: ITEM_REPOSITORY,\n    useFactory: (connection: Connection) =>\n      connection.getRepository(ItemEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const ITEM_REPOSITORY = 'ITEM_REPOSITORY';\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { LogController } from './log.controller';\nimport { logProviders } from './log.providers';\nimport { LogService } from './log.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...logProviders, LogService],\n  exports: [LogService],\n  controllers: [LogController],\n})\nexport class LogModule {}\n","import { Controller, UseGuards } from '@nestjs/common';\nimport { Crud, CrudController } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\nimport { LogEntity } from './log.entity';\nimport { LogService } from './log.service';\n\n@Crud({\n  model: {\n    type: LogEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('logs')\nexport class LogController implements CrudController<LogEntity> {\n  constructor(public service: LogService) {}\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { LogEntity } from './log.entity';\n\n// This should be a real class/interface representing a log entity\n\n@Injectable()\nexport class LogService extends TypeOrmCrudService<LogEntity> {\n  constructor(\n    @Inject('LOG_REPOSITORY')\n    private logRepository: Repository<LogEntity>\n  ) {\n    super(logRepository);\n  }\n\n  async findAll(): Promise<LogEntity[]> {\n    return this.logRepository.find();\n  }\n\n  /*async findOne(email: string): Promise<LogEntity | undefined> {\n    return this.logs.find((log) => log.email === email);\n  }*/\n}\n","import { Connection } from 'typeorm';\nimport { LogEntity } from './log.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { LOG_REPOSITORY } from './constants';\nexport const logProviders = [\n  {\n    provide: LOG_REPOSITORY,\n    useFactory: (connection: Connection) => connection.getRepository(LogEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const LOG_REPOSITORY = 'LOG_REPOSITORY';\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { SurveyController } from './survey.controller';\nimport { surveyProviders } from './survey.providers';\nimport { SurveyService } from './survey.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...surveyProviders, SurveyService],\n  exports: [...surveyProviders, SurveyService],\n  controllers: [SurveyController],\n})\nexport class SurveyModule {}\n","import { Controller, UseGuards } from '@nestjs/common';\nimport { Crud, CrudController } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\nimport { SurveyEntity } from './survey.entity';\nimport { SurveyService } from './survey.service';\n\n@Crud({\n  model: {\n    type: SurveyEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    join: {\n      customer: {\n        eager: true,\n        allow: ['name'],\n        alias: 'customer'\n      },\n\n\n    },\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('surveys')\nexport class SurveyController implements CrudController<SurveyEntity> {\n  constructor(public service: SurveyService) {}\n\n\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { SurveyEntity } from './survey.entity';\n\n// This should be a real class/interface representing a survey entity\n\n@Injectable()\nexport class SurveyService extends TypeOrmCrudService<SurveyEntity> {\n  constructor(\n    @Inject('SURVEY_REPOSITORY')\n    private surveyRepository: Repository<SurveyEntity>\n  ) {\n    super(surveyRepository);\n  }\n\n  async findAll(): Promise<SurveyEntity[]> {\n    return this.surveyRepository.find();\n  }\n\n  /*async findOne(email: string): Promise<SurveyEntity | undefined> {\n    return this.surveys.find((survey) => survey.email === email);\n  }*/\n}\n","import { Connection } from 'typeorm';\nimport { SurveyEntity } from './survey.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { SURVEY_REPOSITORY } from './survey.constants';\nexport const surveyProviders = [\n  {\n    provide: SURVEY_REPOSITORY,\n    useFactory: (connection: Connection) => connection.getRepository(SurveyEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const SURVEY_REPOSITORY = 'SURVEY_REPOSITORY';\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { SectorController } from './sector.controller';\nimport { sectorProviders } from './sector.providers';\nimport { SectorService } from './sector.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...sectorProviders, SectorService],\n  exports: [SectorService],\n  controllers: [SectorController],\n})\nexport class SectorModule {}\n","import { Controller, UseGuards } from '@nestjs/common';\nimport { Crud, CrudController } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\n\nimport { SectorEntity } from './sector.entity';\nimport { SectorService } from './sector.service';\n\n@Crud({\n  model: {\n    type: SectorEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    join: {\n      survey: {\n        eager: true,\n        allow: ['name'],\n        alias: 'survey',\n      },\n\n      ['survey.customer']: {\n        eager: true,\n        allow: ['name'],\n        alias: 'surveyCustomer',\n      },\n    },\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('sectors')\nexport class SectorController implements CrudController<SectorEntity> {\n  constructor(public service: SectorService) {}\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { SectorEntity } from './sector.entity';\n\n// This should be a real class/interface representing a sector entity\n\n@Injectable()\nexport class SectorService extends TypeOrmCrudService<SectorEntity> {\n  constructor(\n    @Inject('SECTOR_REPOSITORY')\n    private sectorRepository: Repository<SectorEntity>\n  ) {\n    super(sectorRepository);\n  }\n\n  async findAll(): Promise<SectorEntity[]> {\n    return this.sectorRepository.find();\n  }\n\n  /*async findOne(email: string): Promise<SectorEntity | undefined> {\n    return this.sectors.find((sector) => sector.email === email);\n  }*/\n}\n","import { Connection } from 'typeorm';\nimport { SectorEntity } from './sector.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { SECTOR_REPOSITORY } from './sector.constants';\nexport const sectorProviders = [\n  {\n    provide: SECTOR_REPOSITORY,\n    useFactory: (connection: Connection) => connection.getRepository(SectorEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const SECTOR_REPOSITORY = 'SECTOR_REPOSITORY';\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { PhotoController } from './photo.controller';\nimport { photoProviders } from './photo.providers';\nimport { PhotoService } from './photo.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...photoProviders, PhotoService],\n  exports: [PhotoService],\n  controllers: [PhotoController],\n})\nexport class PhotoModule {}\n","import {\n  Body,\n  Controller,\n  Param,\n  Post,\n  Request,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Crud, CrudController, ParsedBody } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { PhotoEntity } from './photo.entity';\nimport { PhotoService } from './photo.service';\nimport { Express } from 'express';\nimport { Multer, diskStorage } from 'multer';\nimport { editFileName, imageFileFilter } from './photo.utils';\n\n@Crud({\n  model: {\n    type: PhotoEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    join: {\n      item: {\n        eager: true,\n        allow: ['name'],\n        alias: 'item',\n      },\n    },\n    alwaysPaginate: true,\n  },\n})\n@UseGuards(JwtAuthGuard)\n@Controller('photos')\nexport class PhotoController implements CrudController<PhotoEntity> {\n  constructor(public service: PhotoService) {}\n\n  @Post('upload')\n  @UseInterceptors(\n    FileInterceptor('photo', {\n      storage: diskStorage({\n        destination: (req, file, callback) => {\n          callback(null, `../shared/files/seyconel`);\n        },\n        filename: editFileName,\n      }),\n      fileFilter: imageFileFilter,\n    })\n  )\n  async uploadFile(\n    @UploadedFile() file: Express.Multer.File,\n    @Param('entity') entity: string,\n    @Body('data') _data: any\n  ) {\n    console.log({ file, entity });\n    const data = JSON.parse(_data);\n    return await this.service.uploadSave(file ? file.filename : null, data);\n  }\n}\n","module.exports = require(\"@nestjs/platform-express\");","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { PhotoEntity } from './photo.entity';\nimport { join } from 'path';\nimport { unlink } from 'fs';\n\n// This should be a real class/interface representing a photo entity\n\n@Injectable()\nexport class PhotoService extends TypeOrmCrudService<PhotoEntity> {\n  constructor(\n    @Inject('PHOTO_REPOSITORY')\n    private photoRepository: Repository<PhotoEntity>\n  ) {\n    super(photoRepository);\n  }\n\n  async uploadSave(fileData, _data: any) {\n    /*let oldPhoto;\n    if (oldId) {\n      oldPhoto = await this.photoRepository.findOne(oldId);\n    }*/\n    const { file, ...data } = _data;\n    const photo = await this.photoRepository.save({\n      ...data,\n      ...(fileData ? { file: fileData } : null),\n    });\n    /*if (oldPhoto) {\n      const staticPath = join(\n        __dirname,\n        '..',\n        '..',\n        '..',\n        '..',\n        'shared',\n        'files',\n        oldPhoto.photoUrl\n      );\n      unlink(`${staticPath}`, () => {\n        console.log('unlinked');\n      });\n    }\n    */\n    return photo;\n  }\n}\n","module.exports = require(\"express\");","module.exports = require(\"multer\");","import { extname } from 'path';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const imageFileFilter = (req, file, callback) => {\n  if (!file.originalname.match(/\\.(jpg|jpeg|png|gif)$/)) {\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n  callback(null, true);\n};\n\nexport const editFileName = (req, file, callback) => {\n  const fileExtName = extname(file.originalname);\n  const randomName = uuidv4();\n  callback(null, `${randomName}${fileExtName}`);\n};\n","module.exports = require(\"path\");","module.exports = require(\"uuid\");","import { Connection } from 'typeorm';\nimport { PhotoEntity } from './photo.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { PHOTO_REPOSITORY } from './constants';\nexport const photoProviders = [\n  {\n    provide: PHOTO_REPOSITORY,\n    useFactory: (connection: Connection) => connection.getRepository(PhotoEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const PHOTO_REPOSITORY = 'PHOTO_REPOSITORY';\n","import { Module } from '@nestjs/common';\nimport { EventsGateway } from './events.gateway';\n\n@Module({\n  providers: [EventsGateway],\n  exports: [EventsGateway],\n})\nexport class EventsModule {}\n","import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../../config/database/database.module';\nimport { SurveyModule } from '../survey/survey.module';\nimport { ReportController } from './report.controller';\nimport { reportProviders } from './report.providers';\nimport { ReportService } from './report.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...reportProviders, ReportService],\n  exports: [...reportProviders, ReportService],\n  controllers: [ReportController],\n})\nexport class ReportModule {}\n","import { Controller, Get, Param, Response } from '@nestjs/common';\nimport { Crud, CrudController } from '@dataui/crud';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { ReportEntity } from './report.entity';\nimport { ReportService } from './report.service';\n\n@Crud({\n  model: {\n    type: ReportEntity,\n  },\n  params: {\n    slug: {\n      field: 'id',\n      type: 'uuid',\n      primary: true,\n    },\n  },\n  query: {\n    exclude: ['data'],\n    join: {\n      customer: {\n        eager: true,\n        allow: ['name'],\n        alias: 'customer',\n      },\n    },\n    alwaysPaginate: true,\n  },\n})\n// @UseGuards(JwtAuthGuard)\n@Controller('reports')\nexport class ReportController implements CrudController<ReportEntity> {\n  constructor(public service: ReportService) {}\n\n  @Get('generate/:surveyId/:ri')\n  generate(@Param('surveyId') surveyId: string, @Param('ri') ri: string) {\n    return this.service.generate(surveyId, ri);\n  }\n\n  @Get('pdf/:reportId')\n  async getPDF(\n    @Response() res,\n    @Param('reportId') reportId: string\n  ): Promise<void> {\n    return this.service.pdf(res, reportId);\n  }\n}\n","import { Inject, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { TypeOrmCrudService } from '@dataui/crud-typeorm';\nimport { ReportEntity } from './report.entity';\nimport { SurveyEntity } from '../survey/survey.entity';\nimport * as PDFDocument from 'pdfkit-table';\nimport { format } from 'date-fns';\nimport { ItemEntity } from '../item/item.entity';\nimport { ItemTypes } from '@seyconel/config';\nimport { staticPath } from '../../config/path';\nimport * as chartistSvg from 'chartist-svg';\nimport * as SVGtoPDF from 'svg-to-pdfkit';\nimport * as fs from 'fs';\nimport * as PDFKit from 'pdfkit';\nimport * as gs from 'ghostscript4js';\nimport * as GoogleChartsNode from 'google-charts-node'\n\n@Injectable()\nexport class ReportService extends TypeOrmCrudService<ReportEntity> {\n  counter = 0;\n  constructor(\n    @Inject('REPORT_REPOSITORY')\n    private reportRepository: Repository<ReportEntity>\n  ) {\n    super(reportRepository);\n  }\n\n  colors = {\n    dark: '#0d326f',\n    cyan: '#0099cc',\n    blue: '#0000FF',\n    black: '#000000',\n  };\n  lineWidth = 0.7;\n\n  actualPage = '';\n  pageTemplatePage = '';\n\n  sector: string;\n\n  async generate(surveyId: string, ri: string): Promise<SurveyEntity> {\n    const surveyRepository = this.reportRepository.manager.getRepository(\n      SurveyEntity\n    );\n    await surveyRepository.update({ id: surveyId }, { completed: true });\n    const data = await surveyRepository\n      .createQueryBuilder('surveys')\n      .leftJoinAndSelect('surveys.customer', 'customer')\n      .leftJoinAndSelect('surveys.sectors', 'sectors')\n      .leftJoinAndSelect('sectors.items', 'items')\n      .leftJoinAndSelect('items.photos', 'photos')\n      .select([\n        'surveys.id',\n        'surveys.name',\n        'customer.id',\n        'customer.name',\n        'customer.cnpj',\n        'sectors.id',\n        'sectors.name',\n        'items.id',\n        'items.traceability',\n        'items.data',\n        'items.approved',\n        'photos.id',\n        'photos.file',\n      ])\n      .where({ id: surveyId })\n      .getOne();\n    if (!data) {\n      return;\n    }\n    await this.reportRepository.save({\n      name: data?.name,\n      surveyId,\n      data,\n      ri: Number(ri),\n    });\n  }\n\n  zeroPad(num: number, places: number) {\n    return String(num).padStart(places, '0');\n  }\n\n  async pdf(res, reportId: string): Promise<any> {\n    const filePath = `${staticPath}/${reportId}.pdf`;\n    const filePathSrc = `${staticPath}/${reportId}-src.pdf`;\n\n    try {\n      if (fs.existsSync(filePath)) {\n        console.log('file exists', filePath);\n        const readStream = fs.createReadStream(filePath);\n        // This will wait until we know the readable stream is actually valid before piping\n        readStream.on('open', function () {\n          // This just pipes the read stream to the response object (which goes to the client)\n          res.set({\n            'Content-Type': 'application/pdf',\n          });\n          readStream.pipe(res);\n        });\n        return true;\n        //file exists\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    const report = await this.reportRepository.findOne({where: {id: reportId}});\n    const doc = new PDFDocument({\n      size: 'A4',\n      autoFirstPage: false,\n      margins: {\n        top: 163,\n        bottom: -120,\n        left: 0,\n        right: 0,\n      },\n    });\n\n    const reportData = report?.data;\n    const sectors = reportData.sectors;\n\n    console.log('setores: ', sectors.length);\n\n    let locals: any = {\n      docNumber: `RI-${this.zeroPad(report.ri, 4)}`,\n      docDate: format(report.createdAt, 'dd/MM/yy'),\n      sectorName: `Acessórios de movimentação e Içamento de carga`,\n    };\n\n    let i = 0;\n    for (const sector of sectors) {\n      if (i === 0) {\n        doc.on('pageAdded', async (evt) => {\n          await this.pageTemplate(doc, locals);\n        });\n      }\n      i++;\n      console.log('setor: ', i);\n\n      const items = sector?.items ? [...sector.items] : [];\n\n      console.log('items: ', items.length);\n\n      if (items.length > 0) {\n        this.sector = sector;\n        this.actualPage = 'sectorPage';\n        doc.addPage();\n        locals = {\n          ...locals,\n          docDate: format(report.createdAt, 'dd/MM/yy'),\n          sectorName: sector?.name,\n          items,\n        };\n        await this.sectorPage(doc, locals);\n\n        for (const item of items) {\n          this.actualPage = 'itemPage';\n          doc.addPage();\n\n          const itemType = ItemTypes.find(\n            (it) => it.itemType === item?.data?.type\n          );\n          locals = {\n            ...locals,\n            photos: item?.photos,\n            content: itemType.renderContent(item, sector),\n            approved: item?.approved,\n          };\n          await this.itemPage(doc, locals);\n        }\n      }\n    }\n    console.log('document done');\n    /*res.set({\n      'Content-Type': 'application/pdf',\n    });\n    doc.pipe(res);*/\n    res.set({\n      'Content-Type': 'application/pdf',\n    });\n\n    doc.pipe(fs.createWriteStream(filePathSrc)).on('finish', () => {\n      console.log('PDF writed', filePathSrc);\n\n      this.compressAndMove(reportId);\n    });\n\n    doc.pipe(res);\n\n    // Close PDF and write file.\n\n    doc.end();\n  }\n\n  async compressAndMove(id: string) {\n    // Take decision based on Ghostscript version\n    const version = gs.version();\n    console.log(version);\n    gs.executeSync(\n      `-sDEVICE=pdfwrite -dPDFSETTINGS=/printer -o ${staticPath}/${id}.pdf -sDEVICE=pdfwrite -r70 ${staticPath}/${id}-src.pdf`\n    );\n\n    fs.rmSync(`${staticPath}/${id}-src.pdf`);\n  }\n\n  async pageTemplate(doc: typeof PDFKit, locals: any) {\n    if (\n      this.actualPage === 'sectorPage' &&\n      this.pageTemplatePage === 'sectorPage'\n    ) {\n      doc\n        .fontSize(24)\n        .font('Helvetica')\n        .fillColor(this.colors.black)\n        .text(`${locals.sectorName}`, 50, 120, {\n          width: 500,\n          align: 'center',\n          lineGap: 15,\n        });\n    }\n    this.pageTemplatePage = this.actualPage;\n    const width = 594.5;\n    const height = 840;\n    const margin = 23;\n    let points = [margin, margin, height - margin, width - margin];\n    const path = __dirname;\n    doc.image(`${path}/assets/logo.png`, 42, 31, { width: 105 });\n    doc.font('Helvetica');\n    doc\n      .polygon(\n        [points[0], points[1]],\n        [points[0], points[2]],\n        [points[3], points[2]],\n        [points[3], points[1]]\n      )\n      .lineWidth(this.lineWidth)\n      .stroke(this.colors.dark);\n    const height2 = 110;\n    points = [\n      margin * 2 + 1,\n      margin + 2 + margin / 2,\n      height2 - margin,\n      width - margin * 2,\n    ];\n    doc\n      .polygon(\n        [points[0], points[1]],\n        [points[0], points[2]],\n        [points[3], points[2]],\n        [points[3], points[1]]\n      )\n      .lineWidth(this.lineWidth)\n      .stroke(this.colors.dark);\n    points[0] = 142;\n    doc\n      .polygon([points[0], points[1]], [points[0], points[2]])\n      .lineWidth(this.lineWidth)\n      .stroke(this.colors.dark);\n    points[0] = 450;\n    doc\n      .polygon([points[0], points[1]], [points[0], points[2]])\n      .stroke(this.colors.dark);\n    points[0] = 496.5;\n    doc\n      .polygon([points[0], points[1]], [points[0], points[2]])\n      .stroke(this.colors.dark);\n    points[0] = 142;\n    doc\n      .polygon([points[0], 62], [points[3], 62])\n      .lineWidth(this.lineWidth)\n      .stroke(this.colors.dark);\n    doc\n      .fontSize(9)\n      .font('Helvetica-Bold')\n      .fillColor(this.colors.dark)\n      .text(\n        'RELATÓRIO DE INSPEÇÃO – DEPARTAMENTO DE ENGENHARIA',\n        points[0],\n        46,\n        {\n          width: 308,\n          align: 'center',\n        }\n      );\n    doc\n      .fontSize(9)\n      .font('Helvetica')\n      .fillColor(this.colors.dark)\n      .text(`${locals.sectorName}`.toLocaleUpperCase(), points[0], 71, {\n        width: 308,\n        align: 'center',\n      });\n    doc\n      .fontSize(9)\n      .fillColor(this.colors.dark)\n      .font('Helvetica-Bold')\n      .text('Nº DOC:', 450, 46, {\n        width: 47,\n        align: 'center',\n      });\n    doc\n      .fontSize(9)\n      .fillColor(this.colors.dark)\n      .font('Helvetica-Bold')\n      .text('DATA:', 450, 71, {\n        width: 47,\n        align: 'center',\n      });\n    doc\n      .fontSize(10)\n      .font('Helvetica-Bold')\n      .fillColor(this.colors.blue)\n      .text(`${locals.docNumber}`, 496, 46, {\n        width: 52,\n        align: 'center',\n      });\n\n    doc\n      .fontSize(10)\n      .font('Helvetica-Bold')\n      .fillColor(this.colors.cyan)\n      .text(`${locals.docDate}`, 496, 71, {\n        width: 52,\n        align: 'center',\n      });\n  }\n\n  async itemPage(doc: typeof PDFKit, locals: any) {\n    console.log('itemPage', this.counter++);\n\n    doc\n      .fontSize(12)\n      .font('Helvetica')\n      .fillColor(this.colors.black)\n      .text(`${locals.content[0]}`, 60, 110, {\n        width: 480,\n        align: 'left',\n        lineGap: 6,\n      });\n    doc\n      .fontSize(12)\n      .font('Helvetica')\n      .fillColor(this.colors.black)\n      .text(`${locals.content[1]}`, 60, 110, {\n        width: 480,\n        align: 'right',\n        lineGap: 6,\n      });\n\n    doc\n      .fontSize(12)\n      .font('Helvetica')\n      .fillColor(this.colors.black)\n      .text(\n        `( ${locals?.approved ? 'X' : ' '} ) APROVADO      ( ${\n          !locals?.approved ? 'X' : ' '\n        } ) REPROVADO`,\n        60,\n        360,\n        {\n          width: 500,\n          align: 'left',\n          lineGap: 0,\n        }\n      );\n\n    if (locals?.photos && locals?.photos.length > 0) {\n      let y = 60;\n      let imageY = y + 10;\n      let points = [47, 760, y, 548.5];\n\n      const photoGroups: any[] = locals?.photos.reduce(\n        (r, e, i) => (i % 4 ? r[r.length - 1].push(e) : r.push([e])) && r,\n        []\n      );\n      for (const [k, photos] of photoGroups.entries()) {\n        y += 364;\n        if (k % 2 === 1) {\n          doc.addPage();\n          y = 90;\n        }\n        imageY = y + 10;\n        points = [47, 360 + y, y, 548.5];\n        doc\n          .polygon(\n            [points[0], points[1]],\n            [points[0], points[2]],\n            [points[3], points[2]],\n            [points[3], points[1]]\n          )\n          .lineWidth(this.lineWidth)\n          .stroke(this.colors.dark);\n\n        switch (photos.length) {\n          case 1:\n            doc.image(`${staticPath}/${photos[0].file}`, 57, imageY, {\n              width: 480,\n              height: 340,\n              cover: [480, 340],\n              fit: [480, 340],\n              align: 'center',\n              valign: 'center',\n            });\n            break;\n          case 2:\n            doc.image(`${staticPath}/${photos[0].file}`, 57, imageY, {\n              width: 240,\n              height: 340,\n              align: 'center',\n              valign: 'center',\n              fit: [240, 340],\n            });\n            doc.image(`${staticPath}/${photos[1].file}`, 297, imageY, {\n              width: 240,\n              height: 340,\n              fit: [240, 340],\n              align: 'center',\n              valign: 'center',\n            });\n            break;\n          case 3:\n            doc.image(`${staticPath}/${photos[0].file}`, 57, imageY, {\n              width: 240,\n              height: 340,\n              align: 'center',\n              valign: 'center',\n              fit: [240, 340],\n            });\n            doc.image(`${staticPath}/${photos[1].file}`, 297, imageY, {\n              width: 240,\n              height: 190,\n              cover: [240, 170],\n              fit: [240, 170],\n              align: 'center',\n              valign: 'center',\n            });\n            doc.image(`${staticPath}/${photos[2].file}`, 297, imageY + 170, {\n              width: 240,\n              height: 340,\n              cover: [240, 170],\n              fit: [240, 170],\n              align: 'center',\n              valign: 'center',\n            });\n            break;\n          case 4:\n            doc.image(`${staticPath}/${photos[0].file}`, 57, imageY, {\n              width: 240,\n              height: 170,\n              cover: [240, 170],\n              fit: [240, 170],\n              align: 'center',\n              valign: 'center',\n            });\n            doc.image(`${staticPath}/${photos[1].file}`, 57, imageY + 170, {\n              width: 240,\n              height: 170,\n              cover: [240, 170],\n              fit: [240, 170],\n              align: 'center',\n              valign: 'center',\n            });\n            doc.image(`${staticPath}/${photos[2].file}`, 297, imageY, {\n              width: 240,\n              height: 170,\n              cover: [240, 170],\n              fit: [240, 170],\n              align: 'center',\n              valign: 'center',\n            });\n            doc.image(`${staticPath}/${photos[3].file}`, 297, imageY + 170, {\n              width: 240,\n              height: 170,\n              cover: [240, 170],\n              fit: [240, 170],\n              align: 'center',\n              valign: 'center',\n            });\n            break;\n        }\n      }\n    }\n  }\n\n  async sectorPage(doc: PDFDocument, locals: any) {\n    console.log('sectorPage: ', locals?.sectorName);\n\n    doc\n      .fontSize(24)\n      .font('Helvetica')\n      .fillColor(this.colors.black)\n      .text(`${locals.sectorName}`, 50, 120, {\n        width: 500,\n        align: 'center',\n        lineGap: 15,\n      });\n\n    const table = {\n      headers: [\n        { label: 'Num. Rastreio', headerColor: 'yellow', headerOpacity: 1 },\n        { label: 'Descrição', headerColor: 'yellow', headerOpacity: 1 },\n        { label: 'Capacidade', headerColor: 'yellow', headerOpacity: 1 },\n        { label: 'Comprimento', headerColor: 'yellow', headerOpacity: 1 },\n        { label: 'Situação', headerColor: 'yellow', headerOpacity: 1 },\n      ],\n      rows: locals.items.map((item: Partial<ItemEntity>) => {\n        return [\n          item?.traceability,\n          item?.data?.description,\n          item?.data?.capacity\n            ? item?.data?.capacity\n            : item?.data?.capacity_select\n            ? item?.data?.capacity_select\n            : item?.data?.capacity_auto,\n          item?.data?.length,\n          item?.approved ? 'Aprovado' : 'Reprovado',\n        ];\n      }),\n    };\n\n    doc.table(table, {\n      width: 500,\n      columnsSize: [80, 210, 80, 80, 50],\n      // y: 0,\n    });\n\n    const { aprovados, reprovados } = locals.items.reduce(\n      (acc, each) => {\n        if (each.approved) {\n          acc.aprovados++;\n        } else {\n          acc.reprovados++;\n        }\n        return acc;\n      },\n      { aprovados: 0, reprovados: 0 }\n    );\n\n    //const barsSvg = await this.generateBars(aprovados, reprovados);\n    //const pieSvg = await this.generatePie(aprovados, reprovados);\n\n    let y = doc.y + 10;\n    if (doc.y > 600) {\n      doc.addPage();\n      y = 200;\n    }\n    //SVGtoPDF(doc, barsSvg, 75, y);\n    //SVGtoPDF(doc, pieSvg, 325, y);\n    const image = await this.generateImageChart2(aprovados, reprovados);\n    doc.image(image, 50, y, {\n      width: 500,\n      height: 250,\n      align: 'center',\n      valign: 'center',\n    });\n\n    const image2 = await this.generateImageChart(aprovados, reprovados);\n    doc.image(image2, 50, y + 280, {\n      width: 500,\n      height: 250,\n      align: 'center',\n      valign: 'center',\n    });\n  }\n\n  async generateImageChart(aprovados: number, reprovados: number){\n    const drawChartStr = `\n      // Create the data table.\n      var data = new google.visualization.DataTable();\n      data.addColumn('string', '');\n      data.addColumn('number', '');\n      data.addRows([\n        ['Aprovados', ${aprovados}],\n        ['Reprovados', ${reprovados}],\n      ]);\n      // Set chart options\n      var options = { title: 'Gráfico de conclusão' };\n      // Instantiate and draw our chart, passing in some options.\n      var chart = new google.visualization.PieChart(document.getElementById('chart_div'));\n      chart.draw(data, options);\n    `;\n    const image = await GoogleChartsNode.render(drawChartStr, {\n      width: 500,\n      height: 250,\n    });\n    return image;\n  }\n\n  async generateImageChart2(aprovados: number, reprovados: number){\n    const drawChartStr = `\n      // Create the data table.\n      var data = new google.visualization.DataTable();\n      data.addColumn('string', '');\n      data.addColumn('number', '');\n      data.addRows([\n        ['Total', ${aprovados + reprovados}],\n        ['Aprovados', ${aprovados}],\n        ['Reprovados', ${reprovados}],\n      ]);\n      // Set chart options\n      var options = { title: 'Gráfico de conclusão' };\n      // Instantiate and draw our chart, passing in some options.\n      var chart = new google.visualization.BarChart(document.getElementById('chart_div'));\n      chart.draw(data, options);\n    `;\n    const image = await GoogleChartsNode.render(drawChartStr, {\n      width: 500,\n      height: 250,\n    });\n    return image;\n  }\n\n\n  generateBars(aprovados: number, reprovados: number) {\n    const data = {\n      labels: ['Total', 'Aprovados', 'Reprovados'],\n      series: [[aprovados + reprovados, aprovados, reprovados]],\n    };\n    const options = {\n      chart: {\n        width: 250,\n        height: 250,\n        axisY: {\n          onlyInteger: true,\n        },\n      },\n      width: 250,\n      height: 250,\n\n    };\n    const opts = {\n      ...options,\n      css: `.ct-series-a .ct-bar:nth-child(1) {\n        stroke: blue;\n        stroke-width: 30px\n      }\n      .ct-series-a .ct-bar:nth-child(2) {\n        stroke: green;\n        stroke-width: 30px\n      }\n      .ct-series-a .ct-bar:nth-child(3) {\n        stroke: red;\n        stroke-width: 30px\n      }\n      `,\n    };\n    return chartistSvg('bar', data);\n  }\n\n  generatePie(aprovados: number, reprovados: number) {\n    const data = {\n      labels: ['Aprovados', 'Reprovados'],\n      series: [[aprovados, reprovados]],\n    };\n    const options = {\n      width: 250,\n      height: 250,\n      labelInterpolationFnc: function (label, i) {\n        const value = data.series[0][i];\n        if (value === 0) {\n          return '';\n        }\n        const pct = Math.round((value / (aprovados + reprovados)) * 100) + '%';\n        return `${label}: ${pct}`;\n      },\n    };\n    const opts = {\n      options: options,\n      css: `\n      .ct-series-a .ct-slice-pie {\n        fill: green;\n      }\n      .ct-series-b .ct-slice-pie {\n        fill: red;\n      }`,\n    };\n    return chartistSvg('pie', data);\n  }\n}\n","module.exports = require(\"pdfkit-table\");","module.exports = require(\"date-fns\");","export * from './lib/config';\nexport * from './lib/app.config';\nexport * from './lib/app.defaults';\nexport * from './lib/entity/customer.entity';\nexport * from './lib/entity/survey.entity';\nexport * from './lib/entity/sector.entity';\nexport * from './lib/entity/item.entity';\nexport * from './lib/entity/user.entity';\nexport * from './lib/entity/log.entity';\nexport * from './lib/entity/photo.entity';\n\nexport * from './lib/interfaces/detail-fields.interface';\nexport * from './lib/interfaces/entity.interface';\nexport * from './lib/interfaces/object.interface';\nexport * from './lib/interfaces/base.interface';\n","import { ItemCapacityDataEslinga8 } from './table-data';\n\nexport const simNao = (value: any) => (value ? 'Sim' : 'Não');\nexport const ItemTypes = [\n  {\n    name: 'Linga de Cabo de Aço',\n    itemType: 1,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Linga de Cabo de Aço'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nComprimento: ${item?.data?.length} m\nElemento inicial: ${\n          item?.data?.initial_element\n        }                 Elemento de ligação: ${\n          item?.data?.connection_element\n        }                 Elemento final: ${item?.data?.end_element}\nIdent.decargalegível: ${simNao(item?.data?.legible_load_id)}\nRuptura de pernas: ${simNao(item?.data?.leg_break)}\nAmassados: ${simNao(item?.data?.crumpled)}\nDesgastes excessivos: ${simNao(item?.data?.excessive_wear)}\nRedução de elasticidade: ${simNao(item?.data?.elasticity_reduction)}\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}\n      `,\n        `\nRamais: ${item?.data?.extensions}\nCapacidade: ${item?.data?.capacity} T\nDiâmetro: ${item?.data?.diameter} mm\n\nArames rompidos:${simNao(item?.data?.broken_wire)}\n\nDeformação: ${simNao(item?.data?.deformation)}\nDanos por calor: ${simNao(item?.data?.heat_damage)}\nCorrosão externa/interna: ${simNao(item?.data?.corrosion)}`,\n      ];\n    },\n    fields: [\n      'extensions',\n      'capacity',\n      'length',\n      'diameter',\n      'initial_element',\n      'connection_element',\n      'end_element',\n      'legible_load_id',\n      'broken_wire',\n      'leg_break',\n      'crumpled',\n      'deformation',\n      'excessive_wear',\n      'heat_damage',\n      'elasticity_reduction',\n      'corrosion',\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Dispositivos Especiais',\n    itemType: 2,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Dispositivos Especiais'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nComprimento: ${item?.data?.length} m\nOlhal danificado: ${simNao(item?.data?.eyelet_damage)}\nAlavanca danificada: ${simNao(item?.data?.lever_damage)}\nTrinca nas soldas: ${simNao(item?.data?.weld_cracks)}\n\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\nCapacidade: ${item?.data?.capacity} T\nTara: ${item?.data?.tare} kg\nEstrutura externa danificada: ${simNao(item?.data?.external_structure_damage)}\nBase inferior danificada: ${simNao(item?.data?.lower_base_damage)}\nEnsaios não destrutivos: ${simNao(item?.data?.non_destructive_testing)}\n`,\n      ];\n    },\n    fields: [\n      'length',\n      'capacity',\n      'tare',\n      'eyelet_damage',\n      'external_structure_damage',\n      'lever_damage',\n      'lower_base_damage',\n      'documentation',\n      'welds_cracks',\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Garras de elevação',\n    itemType: 3,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Garras de elevação'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nCame danificado: ${simNao(item?.data?.came_damage)}\nPinos danificados: ${simNao(item?.data?.pine_damage)}\n\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\nCapacidade: ${item?.data?.capacity} T\nDeformação: ${simNao(item?.data?.deformation)}\nOlhal danificado: ${simNao(item?.data?.eyelet_damage)}\nDano na trava: ${simNao(item?.data?.latch_damage)}\n`,\n      ];\n    },\n    fields: [\n      'capacity',\n      'deformation',\n      'eyelet_damage',\n      'latch_damage',\n      'came_damage',\n      'pine_damage',\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Acessórios',\n    itemType: 4,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Acessórios'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nGrau: ${(item?.data?.degree)}\nIdentificação: ${simNao(item?.data?.identification)}\nAlongamento: ${simNao(item?.data?.stretching)}\n\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\n\nCapacidade: ${item?.data?.capacity} T\nDeformação: ${simNao(item?.data?.deformation)}\nTravas: ${simNao(item?.data?.latches)}\nTrincas: ${simNao(item?.data?.cracks)}\n`,\n      ];\n    },\n    fields: [\n      'capacity',\n      'degree',\n      'identification',\n      'deformation',\n      'stretching',\n      'latches',\n      'cracks',\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Eslingas',\n    itemType: 5,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Eslingas'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nElemento inicial: ${\n          item?.data?.initial_element\n        }                 Elemento de ligação: ${\n          item?.data?.connection_element\n        }                 Elemento final: ${item?.data?.end_element}\nDanos costura do corpo: ${simNao(item?.data?.body_seam_damage)}\nCortes: ${simNao(item?.data?.cuts)}\nTravas: ${simNao(item?.data?.latches)}\nTrinca: ${simNao(item?.data?.cracks)}\nPlaca de Identificação: ${simNao(item?.data?.nameplate)}\n\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\nRamais: ${item?.data?.extensions}\nCapacidade cinta: ${item?.data?.strap_capacity}\n\nDanos nos olhais: ${simNao(item?.data?.eyelets_damage)}\nDanos costura principal: ${simNao(item?.data?.main_seam_damage)}\nAbrasão: ${simNao(item?.data?.abrasion)}\nDeformação: ${simNao(item?.data?.deformation)}\nAlongamento: ${simNao(item?.data?.stretching)}\n\n`,\n      ];\n    },\n    fields: [\n      'extensions',\n      'strap_type',\n      'initial_element',\n      'connection_element',\n      'end_element',\n      'length',\n      'strap_capacity',\n      'capacity_auto',\n      'body_seam_damage',\n      'main_seam_damage',\n      'eyelets_damage',\n      'abrasion',\n      'deformation',\n      'stretching',\n      'cuts',\n      'latches',\n      'cracks',\n      'nameplate',\n\n      // TODO: CAPACIDADE\n\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Lingas',\n    itemType: 6,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Lingas'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nElemento inicial: ${\n          item?.data?.initial_element\n        }                 Elemento de ligação: ${\n          item?.data?.connection_element\n        }                 Elemento final: ${item?.data?.end_element}\nGrau aço: ${item?.data?.degree_iron}\nAlongamento interno da corrente: ${simNao(item?.data?.internal_stretching)}\nAlongamento externo da corrente: ${simNao(item?.data?.external_stretching)}\nCapacidade: ${item?.data?.capacity_auto}\nDeformação:  ${simNao(item?.data?.deformation)}\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\nComprimento: ${item?.data?.length} m\nRamais: ${item?.data?.extensions}\n\nTravas: ${simNao(item?.data?.latches)}\nTrinca: ${simNao(item?.data?.cracks)}\nPlaca de Identificação: ${simNao(item?.data?.nameplate)}\n\n\n`,\n      ];\n    },\n    fields: [\n      'extensions',\n      'length',\n      'initial_element',\n      'connection_element',\n      'end_element',\n      'nominal_diameter',\n      'capacity_auto',\n\n      'degree_iron',\n      'internal_stretching',\n      'external_stretching',\n      'latches',\n      'cracks',\n      'deformation',\n      'nameplate',\n      // TODO: CAPACIDADE TABELA\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Cintas',\n    itemType: 7,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Cintas'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nCapacidade: ${item?.data?.capacity_select}\nTipo de cinta: ${item?.data?.strap_type}\nDanos na costura do corpo: ${simNao(item?.data?.body_seam_damage)}\nDanos nos olhais: ${simNao(item?.data?.eyelets_damage)}\nCortes: ${simNao(item?.data?.cuts)}\n\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\nComprimento: ${item?.data?.length} m\nRamais: ${item?.data?.extensions}\n\nDanos na costura principal: ${simNao(item?.data?.main_seam_damage)}\nAbrasão: ${simNao(item?.data?.abrasion)}\nPlaca de Identificação: ${simNao(item?.data?.nameplate)}\n\n\n`,\n      ];\n    },\n    fields: [\n      'extensions',\n      'capacity_select',\n      'length',\n      'strap_type',\n      'body_seam_damage',\n      'main_seam_damage',\n      'eyelets_damage',\n      'cuts',\n      'abrasion',\n      'nameplate',\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Talhas manuais',\n    itemType: 8,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Talhas manuais'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nCapacidade: ${item?.data?.capacity} T\n\nGancho danificado: ${simNao(item?.data?.hook_damaged)}\nAlavanca danificada: ${simNao(item?.data?.lever_damage)}\nTrinca nas soldas: ${simNao(item?.data?.welds_cracks)}\nDeformação nos elos da corrente: ${simNao(item?.data?.chain_links_deformation)}\n\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}`,\n        `\n\nComprimento: ${item?.data?.length} m\n\nEstrutura externa danificada: ${simNao(item?.data?.external_structure_damage)}\nPinos danificados: ${simNao(item?.data?.pine_damage)}\nTravas: ${simNao(item?.data?.latches)}\n`,\n      ];\n    },\n    fields: [\n      'length',\n      'capacity',\n      'hook_damaged',\n      'external_structure_damage',\n      'lever_damage',\n      'welds_cracks',\n      'pine_damage',\n      'chain_links_deformation',\n      'latches',\n      'description',\n      'observation',\n    ],\n  },\n  {\n    name: 'Cabo de Aço',\n    itemType: 9,\n    renderContent: (item: any, sector: any) => {\n      const setor = sector?.name;\n      return [\n        `${'Cabo de Aço'}\nPlaca de rastreabilidade Seyconel: ${item?.traceability}\nSetor: ${setor}\nComprimento: ${item?.data?.length} m\n\nIdent.de carga legível: ${simNao(item?.data?.legible_load_id)}\nRuptura de pernas: ${simNao(item?.data?.leg_break)}\nAmassados: ${simNao(item?.data?.crumpled)}\nDesgastes excessivos: ${simNao(item?.data?.excessive_wear)}\nRedução de elasticidade: ${simNao(item?.data?.elasticity_reduction)}\nDescrição: ${item?.data?.description}\nObservação: ${item?.data?.observation ? item?.data?.observation : ''}\n      `,\n        `\nRamais: ${item?.data?.extensions}\nCapacidade: ${item?.data?.capacity} T\nDiâmetro: ${item?.data?.diameter} mm\n\nArames rompidos:${simNao(item?.data?.broken_wire)}\n\nDeformação: ${simNao(item?.data?.deformation)}\nDanos por calor: ${simNao(item?.data?.heat_damage)}\nCorrosão externa/interna: ${simNao(item?.data?.corrosion)}`,\n      ];\n    },\n    fields: [\n      'extensions',\n      'capacity',\n      'length',\n      'diameter',\n      'legible_load_id',\n      'broken_wire',\n      'leg_break',\n      'crumpled',\n      'excessive_wear',\n      'deformation',\n      'elasticity_reduction',\n      'heat_damage',\n      'corrosion',\n      'description',\n      'observation',\n    ],\n  },\n];\n\nexport const ItemDataFieldLegends: { [k: string]: string } = {\n  ELO: 'Elo de sustentação',\n  ESE: 'Elos com sub elos',\n  CAD: 'Cadeado',\n  CAC: 'Cadeado para cinta',\n  MPC: 'Manilha ancora com porca e cupilha',\n  MAR: 'Manilha ancora com rosca',\n  GEF: 'Gancho especial de fundição',\n  GOT: 'Gancho olhal com trava',\n  GOA: 'Gancho olhal auto-travante',\n  SEP: 'Separador de Perfil',\n  DIS: 'Dispositivo Especial',\n  GCT: 'Gancho clévis com trava',\n  GCA: 'Gancho clévis auto-travante',\n  GGA: 'Gancho giratório auto-travante',\n  GOF: 'Gancho Olhal de Fundição',\n  ENC: 'Encurtador de corrente',\n  OG: 'Olhal giratório',\n  OA: 'Olhal articulado',\n  OF: 'Olhal fixo',\n  PCH: 'Pega chapa Horizontal',\n  PCV: 'Pega chapa Vertical',\n  PV: 'Pega Viga',\n  PTB: 'Pega Tambor',\n};\n\nexport const ItemDataFields: {\n  [k: string]: {\n    label: string;\n    type: string;\n    options?: any;\n    templateOptions?: any;\n  };\n} = {\n  sector: {\n    label: 'Setor',\n    type: 'input',\n  },\n  length: {\n    label: 'Comprimento',\n    type: 'input',\n  },\n\n  extensions: {\n    label: 'Ramais',\n    type: 'select-modal',\n    options: [\n      { label: 'Ramal 1', value: 1 },\n      { label: 'Ramal 2', value: 2 },\n      { label: 'Ramal 3', value: 3 },\n      { label: 'Ramal 4', value: 4 },\n    ],\n  },\n  strap_capacity: {\n    label: 'Capacidade cinta',\n    type: 'select-modal',\n    options: [\n      { label: '1 T', value: 1 },\n      { label: '2 T', value: 2 },\n      { label: '3 T', value: 3 },\n      { label: '4 T', value: 4 },\n      { label: '5 T', value: 5 },\n      { label: '6 T', value: 6 },\n      { label: '8 T', value: 8 },\n      { label: '10 T', value: 10 },\n      { label: '12 T', value: 12 },\n      { label: '15 T', value: 15 },\n      { label: '20 T', value: 20 },\n    ],\n  },\n\n  strap_type: {\n    label: 'Tipo de cinta',\n    type: 'select-modal',\n    options: [\n      { label: 'Plana', value: 'plana' },\n      { label: 'Anel', value: 'anel' },\n      { label: 'Tubular', value: 'tubular' },\n    ],\n  },\n  degree: {\n    label: 'Grau',\n    type: 'select-modal',\n    options: [\n      { label: '6', value: 6 },\n      { label: '8', value: 8 },\n      { label: '10', value: 10 },\n      { label: '12', value: 12 },\n    ],\n  },\n  degree_iron: {\n    label: 'Grau aço',\n    type: 'select-modal',\n    options: [\n      { label: 'G8: Grau 8', value: 8 },\n      { label: 'G10: Grau 10', value: 10 },\n    ],\n  },\n  nominal_diameter: {\n    label: 'Diâmetro nominal da corrente',\n    type: 'select-modal',\n    options: Object.keys(ItemCapacityDataEslinga8).map((k) => ({\n      label: `${k}mm`,\n      value: Number(k),\n    })),\n  },\n  capacity_select: {\n    label: 'Capacidade',\n    type: 'select-modal',\n    options: [\n      { label: '1 T', value: 1 },\n      { label: '2 T', value: 2 },\n      { label: '3 T', value: 3 },\n      { label: '4 T', value: 4 },\n      { label: '5 T', value: 5 },\n      { label: '6 T', value: 6 },\n      { label: '8 T', value: 8 },\n      { label: '10 T', value: 10 },\n      { label: '12 T', value: 12 },\n      { label: '15 T', value: 15 },\n      { label: '18 T', value: 18 },\n      { label: '20 T', value: 20 },\n    ],\n  },\n  capacity: {\n    label: 'Capacidade',\n    type: 'input',\n  },\n\n  capacity_auto: {\n    label: 'Capacidade',\n    type: 'input',\n    templateOptions: {\n      readonly: true,\n    },\n  },\n  tare: {\n    label: 'Tara',\n    type: 'input',\n  },\n  initial_element: {\n    label: 'Elemento inicial',\n    type: 'select-modal',\n    options: Object.keys(ItemDataFieldLegends).map((value: string) => ({\n      label: `${value} - ${ItemDataFieldLegends[value]}`,\n      value,\n    })),\n  },\n  connection_element: {\n    label: 'Elemento de ligação',\n    type: 'select-modal',\n    options: Object.keys(ItemDataFieldLegends).map((value: string) => ({\n      label: `${value} - ${ItemDataFieldLegends[value]}`,\n      value,\n    })),\n  },\n  end_element: {\n    label: 'Elemento final',\n    type: 'select-modal',\n    options: Object.keys(ItemDataFieldLegends).map((value: string) => ({\n      label: `${value} - ${ItemDataFieldLegends[value]}`,\n      value,\n    })),\n  },\n  diameter: {\n    label: 'Diâmetro',\n    type: 'input',\n  },\n  corrosion: {\n    label: 'Corrosão interna/externa',\n    type: 'toggle',\n  },\n  internal_stretching: {\n    label: 'Alongamento interno da corrente',\n    type: 'toggle',\n  },\n  external_stretching: {\n    label: 'Alongamento externo da corrente',\n    type: 'toggle',\n  },\n\n  deformation: {\n    label: 'Deformação',\n    type: 'toggle',\n  },\n  chain_links_deformation: {\n    label: 'Deformação nos elos da corrente',\n    type: 'toggle',\n  },\n  identification: {\n    label: 'Identificação',\n    type: 'toggle',\n  },\n  stretching: {\n    label: 'Alongamento',\n    type: 'toggle',\n  },\n  latches: {\n    label: 'Travas',\n    type: 'toggle',\n  },\n  cracks: {\n    label: 'Trincas',\n    type: 'toggle',\n  },\n  welds_cracks: {\n    label: 'Trincas nas soldas',\n    type: 'toggle',\n  },\n  nameplate: {\n    label: 'Placa de identificação',\n    type: 'toggle',\n  },\n  eyelets_damage: {\n    label: 'Danos nos olhais',\n    type: 'toggle',\n  },\n  eyelet_damage: {\n    label: 'Olhal danificado',\n    type: 'toggle',\n  },\n  body_seam_damage: {\n    label: 'Danos costura do corpo',\n    type: 'toggle',\n  },\n  main_seam_damage: {\n    label: 'Danos costura principal',\n    type: 'toggle',\n  },\n  came_damage: {\n    label: 'Came danificado',\n    type: 'toggle',\n  },\n  pine_damage: {\n    label: 'Pinos Danificado',\n    type: 'toggle',\n  },\n  latch_damage: {\n    label: 'Dano na trava',\n    type: 'toggle',\n  },\n  cuts: {\n    label: 'Cortes',\n    type: 'toggle',\n  },\n  abrasion: {\n    label: 'Abrasão',\n    type: 'toggle',\n  },\n  external_structure_damage: {\n    label: 'Estrutura externa danificada',\n    type: 'toggle',\n  },\n  lever_damage: {\n    label: 'Alavanca danificada',\n    type: 'toggle',\n  },\n  lower_base_damage: {\n    label: 'Base inferior danificada',\n    type: 'toggle',\n  },\n  technical_drawing: {\n    label: 'Desenho técnico',\n    type: 'toggle',\n  },\n  measures_match_drawing: {\n    label: 'Medidas batem com desenho',\n    type: 'toggle',\n  },\n  eyelet_fine: {\n    label: 'Olhal em bom estado',\n    type: 'toggle',\n  },\n  legible_load_id: {\n    label: 'Ident. de carga legível',\n    type: 'toggle',\n  },\n  broken_wire: {\n    label: 'Arames rompidos',\n    type: 'toggle',\n  },\n  documentation: {\n    label: 'Documentação',\n    type: 'toggle',\n  },\n  leg_break: {\n    label: 'Ruptura de pernas',\n    type: 'toggle',\n  },\n  crumpled: {\n    label: 'Amassados',\n    type: 'toggle',\n  },\n  excessive_wear: {\n    label: 'Desgastes excessivos',\n    type: 'toggle',\n  },\n  hook_damaged: {\n    label: 'Gancho danificado',\n    type: 'toggle',\n  },\n  heat_damage: {\n    label: 'Danos por calor',\n    type: 'toggle',\n  },\n  elasticity_reduction: {\n    label: 'Redução de elasticidade',\n    type: 'toggle',\n  },\n  observation: {\n    label: 'Observação',\n    type: 'textarea',\n  },\n\n  non_destructive_testing: {\n    label: 'Ensaios não destrutivos',\n    type: 'toggle',\n  },\n  /*approved: {\n    label: 'Aprovado?',\n    type: 'toggle',\n  },*/\n  description: {\n    label: 'Descrição',\n    type: 'textarea',\n  },\n};\n","export const ItemCapacityDataEslinga8: {\n  [k: number]: { [j: number]: number };\n} = {\n  6: { 1: 1120, 2: 1600, 3: 2360 },\n  7: { 1: 1500, 2: 2120, 3: 3150 },\n  8: { 1: 2000, 2: 2800, 3: 4250 },\n  10: { 1: 3150, 2: 4250, 3: 6700 },\n  13: { 1: 5300, 2: 7500, 3: 11200 },\n  16: { 1: 8000, 2: 11200, 3: 17000 },\n  18: { 1: 10000, 2: 14000, 3: 21200 },\n  20: { 1: 12500, 2: 17000, 3: 26500 },\n  22: { 1: 15000, 2: 21200, 3: 31500 },\n  26: { 1: 21200, 2: 30000, 3: 45000 },\n  32: { 1: 31500, 2: 15000, 3: 67000 },\n};\n\nexport const ItemCapacityDataEslinga10: {\n  [k: number]: { [j: number]: number };\n} = {\n  6: { 1: 1400, 2: 2000, 3: 3000 },\n  7: { 1: 1900, 2: 2650, 3: 4000 },\n  8: { 1: 2500, 2: 3550, 3: 5300 },\n  10: { 1: 4000, 2: 5600, 3: 8000 },\n  13: { 1: 6700, 2: 9500, 3: 14000 },\n  16: { 1: 10000, 2: 14000, 3: 21200 },\n  19: { 1: 14000, 2: 20000, 3: 30200 },\n  22: { 1: 19000, 2: 26500, 3: 40200 },\n};\n\nexport const ItemCapacityDataEslinga: {\n  [i: number]: { [k: number]: { [j: number]: number } };\n} = {\n  8: ItemCapacityDataEslinga8,\n  10: ItemCapacityDataEslinga10,\n};\n\nexport const ItemCapacityDataLinga: { [k: number]: { [j: number]: number } } = {\n  1: { 1: 1000, 2: 1400, 3: 2100 },\n  2: { 1: 2000, 2: 2800, 3: 4200 },\n  3: { 1: 3000, 2: 4200, 3: 6300 },\n  4: { 1: 4000, 2: 5600, 3: 8400 },\n  5: { 1: 5000, 2: 7000, 3: 10500 },\n  6: { 1: 6000, 2: 8400, 3: 12600 },\n  8: { 1: 8000, 2: 11200, 3: 16800 },\n  10: { 1: 10000, 2: 14000, 3: 21000 },\n  12: { 1: 12000, 2: 16800, 3: 25200 },\n  15: { 1: 15000, 2: 21000, 3: 31500 },\n  20: { 1: 20000, 2: 28000, 3: 42000 },\n};\n\nexport const ItemCapacityData = {};\n","import { customerEntity } from './entity/customer.entity';\nimport { itemEntity } from './entity/item.entity';\nimport { logEntity } from './entity/log.entity';\nimport { photoEntity } from './entity/photo.entity';\nimport { reportEntity } from './entity/report.entity';\nimport { sectorEntity } from './entity/sector.entity';\nimport { surveyEntity } from './entity/survey.entity';\nimport { userEntity } from './entity/user.entity';\n\nexport const appConfig = {\n  title: 'Seyconel',\n  subtitle: 'Inspeções Técnicas',\n  entities: {\n    ...customerEntity,\n    ...surveyEntity,\n    ...sectorEntity,\n    ...itemEntity,\n    ...photoEntity,\n    ...userEntity,\n    ...reportEntity,\n    // ...logEntity,\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaDetailField } from '../interfaces/detail-fields.interface';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n  {\n    key: 'cnpj',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'CNPJ',\n      placeholder: 'Preencha um CNPJ válido',\n      required: true,\n    },\n  },\n];\n\nconst filtersFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n    },\n  },\n  {\n    key: 'cnpj',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'CNPJ',\n      placeholder: 'Preencha um CNPJ válido',\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'CNPJ', prop: 'cnpj' },\n  {\n    name: 'Vistorias',\n    prop: 'surveysCount',\n    maxWidth: 80,\n    cellClass: 'ion-text-center',\n  },\n];\n\nconst detailFields: IaDetailField[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'CNPJ', prop: 'cnpj' },\n  {\n    name: 'Vistorias',\n    prop: 'surveysCount',\n    url: (model: any) => `/admin/surveys/list?customerId=${model.id}`,\n  },\n  {\n    name: 'Criado em',\n    prop: 'createdAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //eturn formatDate(dateString, 'medium', 'pt');\n    },\n  },\n];\n\nexport const customerEntity: { [id: string]: IaEntity } = {\n  customers: {\n    id: 'customers',\n    label: 'Clientes',\n    labelSingular: 'Cliente',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'briefcase',\n\n    actions: [\n      'list',\n      'detail',\n      'add',\n      'edit',\n      'remove',\n      'export',\n      'search',\n      'filter',\n    ],\n    search: (value: any) => ({\n      $or: [{ name: { $cont: value } }, { cnpj: { $cont: value } }],\n    }),\n    filters: { fields: filtersFields },\n    form: { fields },\n    appForm: { fields: fields },\n    list: { columns },\n    detail: { fields: detailFields },\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\n\nexport const iaDefaultField: FormlyFieldConfig = {\n  templateOptions: {\n    labelPosition: 'stacked',\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\nimport { ItemDataFields, ItemTypes } from '../../';\nimport { IaDetailField } from '../interfaces/detail-fields.interface';\n\nimport { tap } from 'rxjs/operators';\nimport { ItemCapacityDataEslinga, ItemCapacityDataLinga } from '../table-data';\nimport { FormlyHookFn } from '@ngx-formly/core/lib/models';\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'traceability',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Placa de rastreabilidade Seyconel',\n      placeholder: 'Preencha a rastreabilidade',\n    },\n  },\n  {\n    key: 'sector.id',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Setor',\n      required: true,\n      dynamicOptions: {\n        entityId: 'sectors',\n        group: 'survey.name',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n  {\n    key: 'data.type',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Tipo de Item',\n      required: true,\n      options: ItemTypes,\n      valueProp: 'itemType',\n      labelProp: 'name',\n    },\n  },\n\n  {\n    key: 'approved',\n    type: 'toggle',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Aprovado?',\n      required: false,\n    },\n  },\n  ...Object.keys(ItemDataFields).map(\n    (k): FormlyFieldConfig => {\n      const field = ItemDataFields[k];\n      const isHookable =\n        [\n          'nominal_diameter',\n          'extensions',\n          'degree_iron',\n          'strap_capacity',\n          'initial_element',\n          'strap_type',\n          'strap_capacity',\n          'end_element',\n          'length',\n          'capacity_select',\n          'diameter',\n          'capacity',\n        ].indexOf(k) > -1;\n      const hooks:any = isHookable\n        ? {\n            onInit: (field: any) => {\n              if (!field || !field?.formControl) {\n                return;\n              }\n              const updateCalcFields = (value: any) => {\n                const extensions: number = field?.formControl?.parent?.get(\n                  'extensions'\n                )?.value;\n\n                const strap_capacity: number = field?.formControl?.parent?.get(\n                  'strap_capacity'\n                )?.value;\n\n                const nominal_diameter: number = field?.formControl?.parent?.get(\n                  'nominal_diameter'\n                )?.value;\n\n                const degree_iron: number = field?.formControl?.parent?.get(\n                  'degree_iron'\n                )?.value;\n                const type = field?.formControl?.parent?.get('type')?.value;\n\n                console.log('calcTable', {\n                  type,\n                  nominal_diameter,\n                  extensions,\n                  degree_iron,\n                  strap_capacity,\n                });\n\n                if (type === 6) {\n                  if (\n                    !(type && nominal_diameter && extensions && degree_iron)\n                  ) {\n                    field?.formControl?.parent\n                      ?.get('capacity_auto')\n                      ?.setValue('');\n                  } else {\n                    try {\n                      const capacityValue =\n                        ItemCapacityDataEslinga[degree_iron][nominal_diameter][\n                          extensions === 4 ? 3 : extensions\n                        ];\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue(capacityValue.toLocaleString());\n                    } catch (err) {\n                      console.log(err);\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue('');\n                    }\n                  }\n\n                  try {\n                    const descriptionFields = [\n                      'initial_element',\n                      'extensions',\n                      'degree_iron',\n                      'nominal_diameter',\n                      'end_element',\n                      'length',\n                      'capacity_auto',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      length: 'm',\n                      capacity_auto: 'kg',\n                      nominal_diameter: 'mm',\n                      extensions: 'R',\n                    };\n                    const prefixes: { [k: string]: string } = {\n                      degree_iron: 'G',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        const prefix = prefixes[descriptionField]\n                          ? prefixes[descriptionField]\n                          : '';\n                        description += `${prefix}${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                  return;\n                }\n                if (type === 5) {\n                  if (!(strap_capacity && extensions)) {\n                    field?.formControl?.parent\n                      ?.get('capacity_auto')\n                      ?.setValue('');\n                  } else {\n                    try {\n                      const capacityValue =\n                        ItemCapacityDataLinga[strap_capacity][\n                          extensions === 4 ? 3 : extensions\n                        ];\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue(capacityValue.toLocaleString());\n                    } catch (err) {\n                      console.log(err);\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue('');\n                    }\n                  }\n\n                  try {\n                    const descriptionFields = [\n                      'initial_element',\n                      'extensions',\n                      'strap_type',\n                      'strap_capacity',\n                      'end_element',\n                      'length',\n                      'capacity_auto',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      length: 'm',\n                      capacity_auto: 'kg',\n                      strap_capacity: 'T',\n                      extensions: 'R',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        description += `${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n\n                  return;\n                }\n                if (type === 7) {\n                  try {\n                    const descriptionFields = [\n                      'strap_type',\n                      'length',\n                      'capacity_select',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      length: 'm',\n                      capacity_select: 'T',\n                    };\n                    const prefixes: { [k: string]: string } = {\n                      strap_type: 'Cinta ',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        const prefix = prefixes[descriptionField]\n                          ? prefixes[descriptionField]\n                          : '';\n                        description += `${prefix}${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                }\n                if (type === 9) {\n                  try {\n                    const descriptionFields = [\n                      'diameter',\n                      'length',\n                      'capacity',\n                    ];\n                    let description = `Cabo de aço, `;\n                    const suffixes: { [k: string]: string } = {\n                      diameter: 'mm',\n                      length: 'm',\n                      capacity: 'T',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        description += `${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                }\n                if (type === 1) {\n                  try {\n                    const descriptionFields = [\n                      'initial_element',\n                      'extensions',\n                      '',\n                      'diameter',\n                      'end_element',\n                      'length',\n                      'capacity',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      diameter: 'mm',\n                      length: 'm',\n                      capacity: 'T',\n                      extensions: 'R',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      if (descriptionField !== '') {\n                        const value: string = field?.formControl?.parent?.get(\n                          descriptionField\n                        )?.value;\n                        if (value) {\n                          const suffix = suffixes[descriptionField]\n                            ? suffixes[descriptionField]\n                            : '';\n                          description += `${value}${suffix}, `;\n                        }\n                      } else {\n                        description += `Cabo de aço, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                }\n              };\n              updateCalcFields(field.formControl.value);\n              return field.formControl.valueChanges.pipe(\n                tap((value) => {\n                  console.log('tap', value);\n                  return updateCalcFields(value);\n                })\n              );\n            },\n          }\n        : {};\n      return {\n        key: `data.${k}`,\n        type: `${field.type}`,\n        templateOptions: {\n          ...iaDefaultField.templateOptions,\n          label: field.label,\n          ...(field.templateOptions?.readonly ? { readonly: true } : null),\n          ...(field.options ? { options: field.options } : null),\n        },\n        hideExpression: (model: any) => {\n          const type = model?.data?.type;\n          if (!type) {\n            return true;\n          }\n          const itemType = ItemTypes.find((it) => it.itemType === type);\n          if (!itemType) {\n            return true;\n          }\n          return itemType?.fields.indexOf(k) < 0;\n        },\n        hooks,\n      };\n    }\n  ),\n];\n\nconst appFields: FormlyFieldConfig[] = [\n  {\n    key: 'data.type',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Tipo de Item',\n      required: true,\n      options: ItemTypes,\n      valueProp: 'itemType',\n      labelProp: 'name',\n    },\n  },\n  {\n    key: 'traceability',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Placa de rastreabilidade Seyconel',\n      placeholder: 'Preencha a rastreabilidade',\n      required: true,\n    },\n  },\n  {\n    key: 'approved',\n    type: 'toggle',\n    defaultValue: false,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Aprovado?',\n      required: false,\n    },\n  },\n\n  ...Object.keys(ItemDataFields).map(\n    (k): FormlyFieldConfig => {\n      const field = ItemDataFields[k];\n      const isHookable =\n        [\n          'nominal_diameter',\n          'extensions',\n          'degree_iron',\n          'strap_capacity',\n          'initial_element',\n          'strap_type',\n          'strap_capacity',\n          'end_element',\n          'length',\n          'capacity_select',\n          'diameter',\n          'capacity',\n        ].indexOf(k) > -1;\n      const hooks: any = isHookable\n        ? {\n            onInit: (field: any) => {\n              if (!field || !field?.formControl) {\n                return;\n              }\n              const updateCalcFields = (value: any) => {\n                const extensions: number = field?.formControl?.parent?.get(\n                  'extensions'\n                )?.value;\n\n                const strap_capacity: number = field?.formControl?.parent?.get(\n                  'strap_capacity'\n                )?.value;\n\n                const nominal_diameter: number = field?.formControl?.parent?.get(\n                  'nominal_diameter'\n                )?.value;\n\n                const degree_iron: number = field?.formControl?.parent?.get(\n                  'degree_iron'\n                )?.value;\n                const type = field?.formControl?.parent?.get('type')?.value;\n\n                console.log('calcTable', {\n                  type,\n                  nominal_diameter,\n                  extensions,\n                  degree_iron,\n                  strap_capacity,\n                });\n\n                if (type === 6) {\n                  if (\n                    !(type && nominal_diameter && extensions && degree_iron)\n                  ) {\n                    field?.formControl?.parent\n                      ?.get('capacity_auto')\n                      ?.setValue('');\n                  } else {\n                    try {\n                      const capacityValue =\n                        ItemCapacityDataEslinga[degree_iron][nominal_diameter][\n                          extensions === 4 ? 3 : extensions\n                        ];\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue(capacityValue.toLocaleString());\n                    } catch (err) {\n                      console.log(err);\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue('');\n                    }\n                  }\n\n                  try {\n                    const descriptionFields = [\n                      'initial_element',\n                      'extensions',\n                      'degree_iron',\n                      'nominal_diameter',\n                      'end_element',\n                      'length',\n                      'capacity_auto',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      length: 'm',\n                      capacity_auto: 'kg',\n                      nominal_diameter: 'mm',\n                      extensions: 'R',\n                    };\n                    const prefixes: { [k: string]: string } = {\n                      degree_iron: 'G',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        const prefix = prefixes[descriptionField]\n                          ? prefixes[descriptionField]\n                          : '';\n                        description += `${prefix}${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                  return;\n                }\n                if (type === 5) {\n                  if (!(strap_capacity && extensions)) {\n                    field?.formControl?.parent\n                      ?.get('capacity_auto')\n                      ?.setValue('');\n                  } else {\n                    try {\n                      const capacityValue =\n                        ItemCapacityDataLinga[strap_capacity][\n                          extensions === 4 ? 3 : extensions\n                        ];\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue(capacityValue.toLocaleString());\n                    } catch (err) {\n                      console.log(err);\n                      field?.formControl?.parent\n                        ?.get('capacity_auto')\n                        ?.setValue('');\n                    }\n                  }\n\n                  try {\n                    const descriptionFields = [\n                      'initial_element',\n                      'extensions',\n                      'strap_type',\n                      'strap_capacity',\n                      'end_element',\n                      'length',\n                      'capacity_auto',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      length: 'm',\n                      capacity_auto: 'kg',\n                      strap_capacity: 'T',\n                      extensions: 'R',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        description += `${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n\n                  return;\n                }\n                if (type === 7) {\n                  try {\n                    const descriptionFields = [\n                      'strap_type',\n                      'length',\n                      'capacity_select',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      length: 'm',\n                      capacity_select: 'T',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        description += `${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                }\n                if (type === 9) {\n                  try {\n                    const descriptionFields = [\n                      'diameter',\n                      'length',\n                      'capacity',\n                    ];\n                    let description = `Cabo de aço, `;\n                    const suffixes: { [k: string]: string } = {\n                      diameter: 'mm',\n                      length: 'm',\n                      capacity: 'T',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      const value: string = field?.formControl?.parent?.get(\n                        descriptionField\n                      )?.value;\n                      if (value) {\n                        const suffix = suffixes[descriptionField]\n                          ? suffixes[descriptionField]\n                          : '';\n                        description += `${value}${suffix}, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                }\n                if (type === 1) {\n                  try {\n                    const descriptionFields = [\n                      'initial_element',\n                      'extensions',\n                      '',\n                      'diameter',\n                      'end_element',\n                      'length',\n                      'capacity',\n                    ];\n                    let description = ``;\n                    const suffixes: { [k: string]: string } = {\n                      diameter: 'mm',\n                      length: 'm',\n                      capacity: 'T',\n                      extensions: 'R',\n                    };\n\n                    for (const descriptionField of descriptionFields) {\n                      if (descriptionField !== '') {\n                        const value: string = field?.formControl?.parent?.get(\n                          descriptionField\n                        )?.value;\n                        if (value) {\n                          const suffix = suffixes[descriptionField]\n                            ? suffixes[descriptionField]\n                            : '';\n                          description += `${value}${suffix}, `;\n                        }\n                      } else {\n                        description += `Cabo de aço, `;\n                      }\n                    }\n                    description = description.slice(0, -2);\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue(description);\n                  } catch (err) {\n                    field?.formControl?.parent\n                      ?.get('description')\n                      ?.setValue('');\n                  }\n                }\n              };\n              updateCalcFields(field.formControl.value);\n              return field.formControl.valueChanges.pipe(\n                tap((value) => {\n                  console.log('tap', value);\n                  return updateCalcFields(value);\n                })\n              );\n            },\n          }\n        : {};\n      return {\n        key: `data.${k}`,\n        type: `${field.type}`,\n        templateOptions: {\n          ...iaDefaultField.templateOptions,\n          label: field.label,\n          ...(field.templateOptions?.readonly ? { readonly: true } : null),\n          ...(field.options ? { options: field.options } : null),\n        },\n        hideExpression: (model: any) => {\n          const type = model?.data?.type;\n          if (!type) {\n            return true;\n          }\n          const itemType = ItemTypes.find((it) => it.itemType === type);\n          if (!itemType) {\n            return true;\n          }\n          return itemType?.fields.indexOf(k) < 0;\n        },\n        hooks,\n      };\n    }\n  ),\n];\n\nconst filterFields: FormlyFieldConfig[] = [\n  {\n    key: 'traceability',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Placa de rastreabilidade Seyconel',\n      placeholder: 'Preencha a rastreabilidade',\n      required: true,\n    },\n  },\n  {\n    key: 'sectorId',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Setor',\n      required: true,\n      dynamicOptions: {\n        entityId: 'sectors',\n        group: 'survey.name',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n  {\n    key: 'approved',\n    type: 'toggle',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Aprovado?',\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  { name: 'Placa de Rastreabilidade', prop: 'traceability' },\n  {\n    name: 'Tipo',\n    prop: 'data.type',\n    pipe: {\n      transform: (val) => ItemTypes.find((it) => it.itemType === val)?.name,\n    },\n  },\n\n  {\n    name: 'Aprovado',\n    prop: 'approved',\n    pipe: { transform: (val) => (val ? 'Sim' : 'Não') },\n  },\n  { name: 'Setor', prop: 'sector.name' },\n  { name: 'Vistoria', prop: 'sector.survey.name', sortable: false },\n  { name: 'Cliente', prop: 'sector.survey.customer.name', sortable: false },\n];\n\nconst detailFields: IaDetailField[] = [\n  { name: 'Placa de Rastreabilidade', prop: 'traceability' },\n  {\n    name: 'Aprovado',\n    prop: 'approved',\n    render: (value) => `${value ? 'Sim' : 'Não'}`,\n  },\n  {\n    name: 'Tipo',\n    prop: 'data.type',\n    render: (value) => `${ItemTypes.find((it) => it.itemType === value)?.name}`,\n  },\n\n  {\n    name: 'Setor',\n    prop: 'sector.name',\n    url: (model: any) => `/admin/sectors/detail/${model.sector.id}`,\n  },\n  {\n    name: 'Vistoria',\n    prop: 'sector.survey.name',\n    url: (model: any) => `/admin/surveys/detail/${model.sector.survey.id}`,\n  },\n  {\n    name: 'Cliente',\n    prop: 'sector.survey.customer.name',\n    url: (model: any) =>\n      `/admin/customers/detail/${model.sector.survey.customer.id}`,\n  },\n  {\n    name: 'Fotos',\n    prop: 'photosCount',\n    url: (model: any) => `/admin/photos/list?itemId=${model.id}`,\n  },\n];\n\nexport const itemEntity: { [id: string]: IaEntity } = {\n  items: {\n    id: 'items',\n    label: 'Itens',\n    labelSingular: 'Item',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'checkbox',\n    actions: ['list', 'detail', 'add', 'edit', 'remove', 'export', 'filter'],\n    form: { fields },\n    appForm: { fields: appFields },\n    filters: { fields: filterFields },\n    list: { columns, queryFilters: ['sectorId'] },\n    detail: { fields: detailFields },\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'file',\n    type: 'file',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Arquivo',\n      filePath: () => ``,\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n\n  {\n    key: 'photoUrl',\n    type: 'hidden',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      type: 'hidden',\n    },\n  },\n\n  {\n    key: 'item.id',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Item',\n      required: true,\n      dynamicOptions: {\n        entityId: 'items',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n];\n\nconst appFields: FormlyFieldConfig[] = [];\n\nconst filterFields: FormlyFieldConfig[] = [\n  {\n    key: 'itemId',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Item',\n      required: true,\n      dynamicOptions: {\n        entityId: 'items',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  {\n    name: 'Foto',\n    prop: 'photoUrl',\n    maxWidth: 100,\n    cellClass: 'cell-no-padding',\n    pipe: {\n      transform: (value: any) => {\n        return `<img height=\"46\" src=\"${value}\" />`;\n      },\n    },\n  },\n  {\n    name: 'URL',\n    prop: 'photoUrl',\n  },\n\n  { name: 'Item', prop: 'item.name' },\n];\n\nconst detailFields: {\n  name: string;\n  prop: string;\n  url?: (value: unknown) => string;\n  render?: (value: unknown) => string;\n}[] = [\n  { name: 'File', prop: 'file' },\n  { name: 'Url', prop: 'photoUrl' },\n  {\n    name: 'Criado em',\n    prop: 'createdAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n];\n\nexport const photoEntity: { [id: string]: IaEntity } = {\n  photos: {\n    id: 'photos',\n    label: 'Fotos',\n    labelSingular: 'Foto',\n    keyField: 'id',\n    displayField: 'photoUrl',\n    icon: 'camera',\n    actions: [\n      'detail',\n      'add',\n      'edit',\n      'remove',\n      'export',\n      'search',\n      'filter',\n    ],\n    search: (value: any) => ({\n      $or: [{ photoUrl: { $cont: value } }],\n    }),\n    filters: { fields: filterFields },\n    form: { fields },\n    appForm: { fields: appFields },\n    list: { columns, queryFilters: ['itemId'] },\n    detail: { fields: detailFields },\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaDetailField } from '../interfaces/detail-fields.interface';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\nimport { ptBR } from 'date-fns/locale';\nimport { format } from 'date-fns';\n\nconst date = format(new Date(), `MMMM 'de' yyyy`, { locale: ptBR });\nconst titleDate = date[0].toUpperCase() + date.substr(1).toLowerCase();\n\nconst appFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    defaultValue: titleDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n];\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n];\n\nconst filterFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'RI', prop: 'ri' },\n\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    pipe: {\n      transform: (value) => {\n        const dateString = value as string;\n        return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n      },\n    },\n    maxWidth: 200,\n    minWidth: 200,\n  },\n];\n\nconst detailFields: IaDetailField[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'RI', prop: 'ri' },\n\n  {\n    name: 'Criado em',\n    prop: 'createdAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n  {\n    name: 'Dados',\n    prop: 'data',\n    render: (value) => {\n      return `${JSON.stringify(value)}`;\n    },\n  },\n];\n\nexport const reportEntity: { [id: string]: IaEntity } = {\n  reports: {\n    id: 'reports',\n    label: 'Relatórios',\n    labelSingular: 'Relatório',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'print',\n    actions: [\n      'list',\n      'detail',\n      'add',\n      'edit',\n      'remove',\n      'export',\n      'search',\n      'filter',\n      'print',\n    ],\n    search: (value) => ({\n      $or: [{ name: { $cont: value } }],\n    }),\n    filters: { fields: filterFields },\n    form: { fields },\n    appForm: { fields: appFields },\n    list: { columns },\n    detail: { fields: detailFields },\n  },\n};\n","module.exports = require(\"date-fns/locale\");","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n\n  {\n    key: 'survey.id',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Vistoria',\n      required: true,\n      dynamicOptions: {\n        entityId: 'surveys',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n];\n\nconst appFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n];\n\nconst filterFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n    },\n  },\n\n  {\n    key: 'surveyId',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Vistoria',\n      required: true,\n      dynamicOptions: {\n        entityId: 'surveys',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'Vistoria', prop: 'survey.name' },\n  {\n    name: 'Itens',\n    prop: 'itemsCount',\n    maxWidth: 80,\n  },\n];\n\nconst detailFields: {\n  name: string;\n  prop: string;\n  url?: (value: unknown) => string;\n  render?: (value: unknown) => string;\n}[] = [\n  { name: 'Nome', prop: 'name' },\n  {\n    name: 'Itens',\n    prop: 'itemsCount',\n    url: (model: any) => `/admin/items/list?sectorId=${model.id}`,\n  },\n  {\n    name: 'Vistoria',\n    prop: 'survey.name',\n    url: (model: any) => `/admin/surveys/detail/${model.survey.id}`,\n  },\n  {\n    name: 'Cliente',\n    prop: 'survey.customer.name',\n    url: (model: any) => `/admin/customers/detail/${model.survey.customer.id}`,\n  },\n\n  {\n    name: 'Criado em',\n    prop: 'createdAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n];\n\nexport const sectorEntity: { [id: string]: IaEntity } = {\n  sectors: {\n    id: 'sectors',\n    label: 'Setores',\n    labelSingular: 'Setor',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'layers',\n    actions: [\n      'list',\n      'detail',\n      'add',\n      'edit',\n      'remove',\n      'export',\n      'search',\n      'filter',\n    ],\n    search: (value: any) => ({\n      $or: [{ name: { $cont: value } }, { 'customer.name': { $cont: value } }],\n    }),\n    filters: { fields: filterFields },\n    form: { fields },\n    appForm: { fields: appFields },\n    list: { columns, queryFilters: ['surveyId'] },\n    detail: { fields: detailFields },\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaDetailField } from '../interfaces/detail-fields.interface';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\nimport { ptBR } from 'date-fns/locale';\nimport { format } from 'date-fns';\n\nconst date = format(new Date(), `MMMM 'de' yyyy`, { locale: ptBR });\nconst titleDate = date[0].toUpperCase() + date.substr(1).toLowerCase();\nconst yearDate = format(new Date(), `yyyy`, { locale: ptBR });\nconst monthDate = format(new Date(), `M`, { locale: ptBR });\n\nconst appFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    defaultValue: titleDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n  {\n    key: 'city',\n    type: 'input',\n    // defaultValue: titleDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Cidade',\n      placeholder: 'Preencha a cidade',\n      required: true,\n    },\n  },\n  {\n    key: 'state',\n    type: 'input',\n    // defaultValue: titleDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Estado',\n      placeholder: 'Preencha o estado',\n      required: true,\n    },\n  },\n  {\n    key: 'month',\n    type: 'input',\n    defaultValue: monthDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Mês',\n      placeholder: 'Preencha o mês',\n      required: true,\n    },\n  },\n  {\n    key: 'year',\n    type: 'input',\n    defaultValue: yearDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Ano',\n      placeholder: 'Preencha o ano',\n      required: true,\n    },\n  },\n  {\n    key: 'completed',\n    type: 'toggle',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Concluído',\n    },\n  },\n];\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n  {\n    key: 'city',\n    type: 'input',\n    // defaultValue: titleDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Cidade',\n      placeholder: 'Preencha a cidade',\n      required: true,\n    },\n  },\n  {\n    key: 'state',\n    type: 'input',\n    // defaultValue: titleDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Estado',\n      placeholder: 'Preencha o estado',\n      required: true,\n    },\n  },\n  {\n    key: 'month',\n    type: 'input',\n    defaultValue: monthDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Mês',\n      placeholder: 'Preencha o mês',\n      required: true,\n    },\n  },\n  {\n    key: 'year',\n    type: 'input',\n    defaultValue: yearDate,\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Ano',\n      placeholder: 'Preencha o ano',\n      required: true,\n    },\n  },\n  {\n    key: 'customer.id',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Cliente',\n      required: true,\n      dynamicOptions: {\n        entityId: 'customers',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n  {\n    key: 'completed',\n    type: 'toggle',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Concluído',\n    },\n  },\n];\n\nconst filterFields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n    },\n  },\n\n  {\n    key: 'customerId',\n    type: 'select-modal',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Cliente',\n      required: true,\n      dynamicOptions: {\n        entityId: 'customers',\n        label: 'name',\n        value: 'id',\n      },\n    },\n  },\n\n  {\n    key: 'completed',\n    type: 'toggle',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Concluído',\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'Cliente', prop: 'customer.name' },\n  {\n    name: 'Concluído',\n    prop: 'completed',\n    maxWidth: 80,\n    pipe: { transform: (val) => (val ? 'Sim' : 'Não') },\n  },\n  { name: 'Setores', prop: 'sectorsCount', maxWidth: 80 },\n\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    pipe: {\n      transform: (value) => {\n        const dateString = value as string;\n        return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n      },\n    },\n    maxWidth: 200,\n    minWidth: 200,\n  },\n];\n\nconst detailFields: IaDetailField[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'Cidade', prop: 'city' },\n  { name: 'Estado', prop: 'state' },\n  { name: 'Mês', prop: 'month' },\n  { name: 'Ano', prop: 'year' },\n  {\n    name: 'Cliente',\n    prop: 'customer.name',\n    url: (model: any) => `/admin/customers/detail/${model.customerId}`,\n  },\n  {\n    name: 'Concluído',\n    prop: 'completed',\n    render: (val) => (val ? 'Sim' : 'Não'),\n  },\n  {\n    name: 'Setores',\n    prop: 'sectorsCount',\n    url: (model: any) => `/admin/sectors/list?surveyId=${model.id}`,\n  },\n  {\n    name: 'Criado em',\n    prop: 'createdAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n  {\n    name: 'Atualizado em',\n    prop: 'modifiedAt',\n    render: (value) => {\n      const dateString = value as string;\n      return dateString;\n      //return formatDate(dateString, 'medium', 'pt');\n    },\n  },\n];\n\nexport const surveyEntity: { [id: string]: IaEntity } = {\n  surveys: {\n    id: 'surveys',\n    label: 'Vistorias',\n    labelSingular: 'Vistoria',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'list',\n    actions: [\n      'list',\n      'detail',\n      'add',\n      'edit',\n      'remove',\n      'export',\n      'search',\n      'filter',\n      'report',\n    ],\n    search: (value) => ({\n      $or: [{ name: { $cont: value } }, { 'customer.name': { $cont: value } }],\n    }),\n    filters: { fields: filterFields },\n    form: { fields },\n    appForm: { fields: appFields },\n    list: { columns, queryFilters: ['customerId'] },\n    detail: { fields: detailFields },\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaDetailField } from '../interfaces/detail-fields.interface';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo.',\n      required: true,\n    },\n  },\n  {\n    key: 'email',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      type: 'email',\n      label: 'E-mail',\n      placeholder: 'Preencha um e-mail válido.',\n      required: true,\n    },\n  },\n  {\n    key: 'password',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Senha',\n      type: 'password',\n      placeholder: 'Preencha a senha.',\n      required: true,\n    },\n  },\n  {\n    key: 'isActive',\n    type: 'checkbox',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Está ativo?',\n      required: true,\n    },\n  },\n];\n\nconst columns: TableColumn[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'E-mail', prop: 'email' },\n];\n\nconst detailFields: IaDetailField[] = [\n  { name: 'Nome', prop: 'name' },\n  { name: 'E-mail', prop: 'email' },\n];\n\nexport const userEntity: { [id: string]: IaEntity } = {\n  users: {\n    id: 'users',\n    label: 'Usuários',\n    labelSingular: 'Usuário',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'people',\n\n    actions: ['list', 'detail', 'add', 'edit', 'remove', 'export'],\n    form: { fields },\n    list: { columns },\n    detail: { fields: detailFields },\n  },\n};\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { IaDetailField } from '../interfaces/detail-fields.interface';\nimport { IaEntity } from '../interfaces/entity.interface';\nimport { iaDefaultField } from '../app.defaults';\n\nconst fields: FormlyFieldConfig[] = [\n  {\n    key: 'name',\n    type: 'input',\n    templateOptions: {\n      ...iaDefaultField.templateOptions,\n      label: 'Nome',\n      placeholder: 'Preencha o nome completo',\n      required: true,\n    },\n  },\n];\n\nconst columns: TableColumn[] = [{ name: 'Nome', prop: 'name' }];\n\nconst detailFields: IaDetailField[] = [{ name: 'Nome', prop: 'name' }];\n\nexport const logEntity: { [id: string]: IaEntity } = {\n  logs: {\n    id: 'logs',\n    label: 'Logs',\n    labelSingular: 'Log',\n    keyField: 'id',\n    displayField: 'name',\n    icon: 'receipt',\n\n    actions: ['list', 'detail', 'export', 'search'],\n    form: { fields },\n    list: { columns },\n    detail: { fields: detailFields },\n  },\n};\n","import { join } from 'path';\n\nexport const staticPath = join(\n  __dirname,\n  '..',\n  '..',\n  '..',\n  '..',\n  'shared',\n  'files',\n  'seyconel'\n);\n","module.exports = require(\"chartist-svg\");","module.exports = require(\"fs\");","module.exports = require(\"ghostscript4js\");","module.exports = require(\"google-charts-node\");","import { Connection } from 'typeorm';\nimport { ReportEntity } from './report.entity';\nimport { DATABASE_CONNECTION } from '../../config/database/database.constants';\nimport { REPORT_REPOSITORY } from './constants';\nimport { SURVEY_REPOSITORY } from '../survey/survey.constants';\nimport { SurveyEntity } from '../survey/survey.entity';\nexport const reportProviders = [\n  {\n    provide: REPORT_REPOSITORY,\n    useFactory: (connection: Connection) =>\n      connection.getRepository(ReportEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n  {\n    provide: SURVEY_REPOSITORY,\n    useFactory: (connection: Connection) =>\n      connection.getRepository(SurveyEntity),\n    inject: [DATABASE_CONNECTION],\n  },\n];\n","export const REPORT_REPOSITORY = 'REPORT_REPOSITORY';\n","module.exports = require(\"body-parser\");","module.exports = require(\"helmet\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\nimport * as bodyParser from 'body-parser';\nimport { join } from 'path';\n\n// Security modules\nimport * as helmet from 'helmet';\nimport { NestExpressApplication } from '@nestjs/platform-express';\nimport { staticPath } from './app/config/path';\n// somewhere in your initialization file\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  app.enableCors();\n  app.use(helmet());\n\n  app.use(bodyParser.json({ limit: '50mb' }));\n  app.use(bodyParser.urlencoded({ limit: '50mb', extended: true }));\n  app.enableCors();\n  console.log({ staticPath });\n  app.useStaticAssets(staticPath, { prefix: '/files' });\n\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"names":["module","exports","require","AppModule","Module","imports","DatabaseModule","AuthModule","UserModule","CustomerModule","SurveyModule","SectorModule","ItemModule","LogModule","PhotoModule","EventsModule","ReportModule","controllers","AppController","providers","SyncService","constructor","syncService","eventsGateway","index","api","getSync","this","ws","server","emit","message","postSync","entityId","data","xls","res","Date","buffer","build","name","options","set","end","Get","UseGuards","JwtAuthGuard","Post","Param","Body","Response","Promise","Controller","EventsGateway","AuthGuard","canActivate","context","super","Injectable","connection","entities","customers","CustomerEntity","surveys","SurveyEntity","sectors","SectorEntity","items","ItemEntity","repository","getRepository","find","where","completed","relations","reduce","acc","each","customer","survey","push","findIndex","c","id","err","console","error","dataArr","results","result","save","saved","findOne","log","modifiedAt","sync","syncedAt","getFormattedDate","d","getFullYear","getMonth","slice","getDate","getHours","getMinutes","getSeconds","Inject","Connection","IaBaseEntity","PrimaryGeneratedColumn","Column","length","default","OneToMany","JoinColumn","Entity","CreateDateColumn","type","UpdateDateColumn","nullable","ManyToOne","Index","sector","ReportEntity","report","reports","item","PhotoEntity","photo","getPhotoUrl","photoUrl","file","environment","cdnUrl","photos","AfterLoad","production","db","host","port","username","password","database","findAll","from","pipe","map","event","WebSocketServer","Server","SubscribeMessage","MessageBody","Observable","WebSocketGateway","cors","databaseProviders","provide","DATABASE_CONNECTION","useFactory","async","createConnection","UserEntity","LogEntity","subscribers","SurveySubscriber","ItemSubscriber","synchronize","user","logs","listenTo","afterInsert","entity","updateSurveyCount","afterUpdate","updatedColumns","afterRemove","customerId","conn","manager","countQuery","createQueryBuilder","surveysCount","getCount","queryUpdate","update","execute","EventSubscriber","updateItemCount","sectorId","itemsCount","PassportModule","JwtModule","register","secret","jwtConstants","signOptions","expiresIn","AuthService","LocalStrategy","JwtStrategy","AuthController","userService","jwtService","checkLogin","email","pass","findByEmail","generateToken","Error","payload","sub","token","sign","UserService","JwtService","TypeOrmCrudService","userRepository","select","Repository","PassportStrategy","Strategy","authService","validate","UnauthorizedException","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","ignoreExpiration","secretOrKey","userProviders","UserController","service","Crud","model","params","slug","field","primary","query","alwaysPaginate","USER_REPOSITORY","inject","auth","authenticate","HttpException","customerProviders","CustomerService","CustomerController","customerRepository","CUSTOMER_REPOSITORY","itemProviders","ItemService","ItemController","base","getMany","req","getManyAndCount","getOne","getOneAndCount","Override","ParsedRequest","CrudRequest","join","eager","allow","alias","itemRepository","parsed","builder","createBuilder","loadRelationCountAndMap","doGetMany","getOneAndCountOrFail","shallow","withDeleted","repo","setSearchCondition","search","found","throwNotFoundException","ITEM_REPOSITORY","logProviders","LogService","LogController","logRepository","LOG_REPOSITORY","surveyProviders","SurveyService","SurveyController","surveyRepository","SURVEY_REPOSITORY","sectorProviders","SectorService","SectorController","sectorRepository","SECTOR_REPOSITORY","photoProviders","PhotoService","PhotoController","uploadFile","_data","JSON","parse","uploadSave","filename","UseInterceptors","FileInterceptor","storage","diskStorage","destination","callback","editFileName","fileFilter","imageFileFilter","UploadedFile","Express","Multer","File","photoRepository","fileData","originalname","match","fileExtName","extname","PHOTO_REPOSITORY","reportProviders","ReportService","ReportController","generate","surveyId","ri","getPDF","reportId","pdf","exclude","reportRepository","counter","colors","dark","cyan","blue","black","lineWidth","actualPage","pageTemplatePage","leftJoinAndSelect","Number","zeroPad","num","places","String","padStart","filePath","staticPath","filePathSrc","fs","existsSync","readStream","createReadStream","on","doc","PDFDocument","size","autoFirstPage","margins","top","bottom","left","right","reportData","locals","docNumber","docDate","format","createdAt","sectorName","i","evt","pageTemplate","addPage","sectorPage","itemType","ItemTypes","it","content","renderContent","approved","itemPage","createWriteStream","compressAndMove","version","gs","executeSync","rmSync","fontSize","font","fillColor","text","width","align","lineGap","margin","points","height","path","__dirname","image","polygon","stroke","height2","toLocaleUpperCase","y","imageY","photoGroups","r","e","k","entries","cover","fit","valign","table","headers","label","headerColor","headerOpacity","rows","traceability","description","capacity","capacity_select","capacity_auto","columnsSize","aprovados","reprovados","generateImageChart2","image2","generateImageChart","drawChartStr","GoogleChartsNode","render","generateBars","chartistSvg","labels","series","generatePie","simNao","value","setor","initial_element","connection_element","end_element","legible_load_id","leg_break","crumpled","excessive_wear","elasticity_reduction","observation","extensions","diameter","broken_wire","deformation","heat_damage","corrosion","fields","eyelet_damage","lever_damage","weld_cracks","tare","external_structure_damage","lower_base_damage","non_destructive_testing","came_damage","pine_damage","latch_damage","degree","identification","stretching","latches","cracks","body_seam_damage","cuts","nameplate","strap_capacity","eyelets_damage","main_seam_damage","abrasion","degree_iron","internal_stretching","external_stretching","strap_type","hook_damaged","welds_cracks","chain_links_deformation","ItemDataFieldLegends","ELO","ESE","CAD","CAC","MPC","MAR","GEF","GOT","GOA","SEP","DIS","GCT","GCA","GGA","GOF","ENC","OG","OA","OF","PCH","PCV","PV","PTB","ItemDataFields","nominal_diameter","Object","keys","ItemCapacityDataEslinga8","templateOptions","readonly","technical_drawing","measures_match_drawing","eyelet_fine","documentation","ItemCapacityDataEslinga10","ItemCapacityDataEslinga","ItemCapacityDataLinga","ItemCapacityData","appConfig","title","subtitle","customerEntity","surveyEntity","sectorEntity","itemEntity","photoEntity","userEntity","reportEntity","key","iaDefaultField","placeholder","required","filtersFields","labelSingular","keyField","displayField","icon","actions","$or","$cont","cnpj","filters","form","appForm","list","columns","prop","maxWidth","cellClass","detail","url","labelPosition","dynamicOptions","group","valueProp","labelProp","hooks","indexOf","onInit","formControl","updateCalcFields","parent","get","descriptionFields","suffixes","prefixes","descriptionField","suffix","setValue","capacityValue","toLocaleString","valueChanges","tap","hideExpression","appFields","defaultValue","filterFields","transform","val","sortable","detailFields","queryFilters","date","locale","ptBR","toUpperCase","substr","toLowerCase","stringify","minWidth","titleDate","yearDate","monthDate","users","logEntity","REPORT_REPOSITORY","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","app","NestFactory","create","setGlobalPrefix","enableCors","use","helmet","bodyParser","json","limit","urlencoded","extended","useStaticAssets","prefix","process","env","PORT","listen","Logger","bootstrap"],"sourceRoot":""}